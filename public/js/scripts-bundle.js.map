{"version":3,"sources":["+custom.js","+searchable.js"],"names":["$","document","ready","d","Date","year","getFullYear","text","TDMN","Backbone","Marionette","_","searchQueryModel","Model","SchoolsCollection","Collection","extend","highlight","id","this","trigger","get","schoolsCollection","helmetsCollection","SearchBoxView","ItemView","constructor","debouncedHandleQuery","debounce","handleQuery","apply","arguments","events","input input","template","evt","model","set","currentTarget","value","searchBox","el","render","SchoolSearchView","CollectionView","collectionEvents","reset","childView","_searchQuery","search","q","toLowerCase","filter","child","index","collection","indexOf","schoolSearchView","on","searchModel","query","highlightedSchool","getJSON","data","helmets","schools","map","school","helmet","toJSON","jQuery"],"mappings":"AAAAA,EAAAC,UAAAC,MAAA,WAOA,GAAAC,GAAA,GAAAC,MACAC,EAAAF,EAAAG,aAEAN,GAAA,cAAAO,KAAAF,KCVAG,QAEA,SAAAR,EAAAS,EAAAC,EAAAC,EAAAH,GAEA,YAGA,IAAAI,GAAA,GAAAH,GAAAI,MAEAC,EAAAL,EAAAM,WAAAC,QACAC,UAAA,SAAAC,GACAC,KAAAC,QAAA,YAAAD,KAAAE,IAAAH,MAIAV,GAAAc,kBAAA,GAAAR,GACAN,EAAAe,kBAAA,GAAAd,GAAAM,UAIA,IAAAS,GAAAd,EAAAe,SAAAT,QACAU,YAAA,WACAP,KAAAQ,qBAAAhB,EAAAiB,SAAAT,KAAAU,YAAA,KACAnB,EAAAe,SAAAK,MAAAX,KAAAY,YAGAC,QACAC,cAAA,wBAGAC,SAAA,kBAEAL,YAAA,SAAAM,GACAhB,KAAAiB,MAAAC,IAAA,IAAAF,EAAAG,cAAAC,UAIAC,EAAA,GAAAhB,IACAiB,GAAA,cAEAL,MAAAxB,GAGA4B,GAAAE,QAGA,IAAAC,GAAAjC,EAAAkC,eAAA5B,QACAyB,GAAA,kBAEAI,kBACAC,MAAA,UAGAC,UAAArC,EAAAe,SAAAT,QACAkB,SAAA,wBAGAc,aAAA,GAEAC,OAAA,SAAAC,GACA/B,KAAA6B,aAAAE,EAAAC,cACAhC,KAAAuB,UAGAU,OAAA,SAAAC,EAAAC,EAAAC,GACA,MAAA,KAAApC,KAAA6B,cAEAK,EAAAhC,IAAA,QAAA8B,cAAAK,QAAArC,KAAA6B,sBAIAS,EAAA,GAAAd,IACAY,WAAA/C,EAAAc,mBAKAV,GAAA8C,GAAA,WAAA,SAAAC,EAAAC,GACAH,EAAAR,OAAAW,KAGApD,EAAAc,kBAAAoC,GAAA,YAAA,SAAAG,GACAjD,EAAAyB,IAAA,IAAAwB,EAAAxC,IAAA,WAKArB,EAAA8D,QAAA,eAAA,SAAAC,GACAvD,EAAAe,kBAAAuB,MAAAiB,EAAAC,SAIAD,EAAAE,QAAAC,IAAA,SAAAC,GAKA,MAJAA,GAAAH,QAAArD,EAAAuD,IAAAC,EAAAH,QAAA,SAAAI,GAEA,MADAA,GAAAA,OAAA5D,EAAAe,kBAAAF,IAAA+C,EAAAA,QAAAC,SACAD,IAEAD,IAGA3D,EAAAc,kBAAAwB,MAAAiB,EAAAE,YAIAK,OAAA7D,SAAAC,WAAAC,EAAAH","file":"scripts-bundle.js","sourcesContent":["$(document).ready(function() {\n\n\t//custom scripting goes here\n\t\n\t// injecting current year into footer\n\t// DO NOT DELETE\n\n\tvar d = new Date();\n\tvar year = d.getFullYear();\n\n\t$('.copyright').text(year);\n\n\n\t// some code blocks require javascript to function, like slideshows, synopsis blocks, etc\n\t// you can find that code here: https://github.com/DallasMorningNews/generator-dmninteractives/wiki/Cookbook\n\n\n\n});\n","TDMN = {};\n\n(function($, Backbone, Marionette, _, TDMN) {\n\n  'use strict';\n\n  // Data models\n  var searchQueryModel = new Backbone.Model();\n\n  var SchoolsCollection = Backbone.Collection.extend({\n    highlight: function(id) {\n      this.trigger('highlight', this.get(id));\n    }\n  });\n\n  TDMN.schoolsCollection = new SchoolsCollection();\n  TDMN.helmetsCollection = new Backbone.Collection();\n\n\n  // Views\n  var SearchBoxView = Marionette.ItemView.extend({\n    constructor: function() {\n      this.debouncedHandleQuery = _.debounce(this.handleQuery, 200);\n      Marionette.ItemView.apply(this, arguments);\n    },\n\n    events: {\n      'input input': 'debouncedHandleQuery'\n    },\n\n    template: '#tpl-search-box',\n\n    handleQuery: function(evt) {\n      this.model.set('q', evt.currentTarget.value);\n    }\n  });\n\n  var searchBox = new SearchBoxView({\n    el: '#search-box',\n\n    model: searchQueryModel\n  });\n\n  searchBox.render();\n\n\n  var SchoolSearchView = Marionette.CollectionView.extend({\n    el: '#search-results',\n\n    collectionEvents: {\n      reset: 'render'\n    },\n\n    childView: Marionette.ItemView.extend({\n      template: '#tpl-search-results'\n    }),\n\n    _searchQuery: '',\n\n    search: function(q) {\n      this._searchQuery = q.toLowerCase();\n      this.render();\n    },\n\n    filter: function(child, index, collection) {\n      if(this._searchQuery === '') return false;\n\n      return child.get('name').toLowerCase().indexOf(this._searchQuery) !== -1;\n    }\n  });\n\n  var schoolSearchView = new SchoolSearchView({\n    collection: TDMN.schoolsCollection\n  });\n\n\n  // Wiring\n  searchQueryModel.on('change:q', function(searchModel, query) {\n    schoolSearchView.search(query);\n  });\n\n  TDMN.schoolsCollection.on('highlight', function(highlightedSchool) {\n    searchQueryModel.set('q', highlightedSchool.get('name'));\n  });\n\n\n  // Fetch and bootstrap collections\n  $.getJSON('js/data.json', function(data) {\n    TDMN.helmetsCollection.reset(data.helmets);\n\n    // Add helmets info to the schools so we can easily render it in the\n    // templates\n    data.schools.map(function(school) {\n      school.helmets = _.map(school.helmets, function(helmet) {\n        helmet.helmet = TDMN.helmetsCollection.get(helmet.helmet).toJSON();\n        return helmet;\n      });\n      return school;\n    });\n\n    TDMN.schoolsCollection.reset(data.schools);\n  });\n\n\n})(jQuery, Backbone, Marionette, _, TDMN);\n"],"sourceRoot":"/source/"}