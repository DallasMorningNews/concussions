{"version":3,"sources":["underscore.js","backbone.js","backbone.babysitter.js","backbone.wreqr.js","backbone.marionette.js"],"names":["createReduce","dir","iterator","obj","iteratee","memo","keys","index","length","currentKey","context","optimizeCb","isArrayLike","_","arguments","createPredicateIndexFinder","array","predicate","cb","getLength","createIndexFinder","predicateFind","sortedIndex","item","idx","i","Math","max","min","slice","call","isNaN","collectNonEnumProps","nonEnumIdx","nonEnumerableProps","constructor","proto","isFunction","prototype","ObjProto","prop","has","contains","push","root","this","previousUnderscore","ArrayProto","Array","Object","FuncProto","Function","toString","hasOwnProperty","nativeIsArray","isArray","nativeKeys","nativeBind","bind","nativeCreate","create","Ctor","_wrapped","exports","module","VERSION","func","argCount","value","other","collection","accumulator","apply","identity","isObject","matcher","property","Infinity","createAssigner","keysFunc","undefinedOnly","source","l","key","baseCreate","result","MAX_ARRAY_INDEX","pow","each","forEach","map","collect","results","reduce","foldl","inject","reduceRight","foldr","find","detect","findIndex","findKey","filter","select","list","reject","negate","every","all","some","any","includes","include","fromIndex","guard","values","indexOf","invoke","method","args","isFunc","pluck","where","attrs","findWhere","computed","lastComputed","shuffle","rand","set","shuffled","random","sample","n","sortBy","criteria","sort","left","right","a","b","group","behavior","groupBy","indexBy","countBy","toArray","size","partition","pass","fail","first","head","take","initial","last","rest","tail","drop","compact","flatten","input","shallow","strict","startIndex","output","isArguments","j","len","without","difference","uniq","unique","isSorted","isBoolean","seen","union","intersection","argsLength","zip","unzip","object","findLastIndex","low","high","mid","floor","lastIndexOf","range","start","stop","step","ceil","executeBound","sourceFunc","boundFunc","callingContext","self","TypeError","bound","concat","partial","boundArgs","position","bindAll","Error","memoize","hasher","cache","address","delay","wait","setTimeout","defer","throttle","options","timeout","previous","later","leading","now","remaining","clearTimeout","trailing","debounce","immediate","timestamp","callNow","wrap","wrapper","compose","after","times","before","once","hasEnumBug","propertyIsEnumerable","allKeys","mapObject","pairs","invert","functions","methods","names","extend","extendOwn","assign","pick","oiteratee","omit","String","defaults","props","clone","tap","interceptor","isMatch","eq","aStack","bStack","className","areArrays","aCtor","bCtor","pop","isEqual","isEmpty","isString","isElement","nodeType","type","name","Int8Array","isFinite","parseFloat","isNumber","isNull","isUndefined","noConflict","constant","noop","propertyOf","matches","accum","Date","getTime","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","match","join","testRegexp","RegExp","replaceRegexp","string","test","replace","escape","unescape","fallback","idCounter","uniqueId","prefix","id","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","template","text","settings","oldSettings","offset","variable","render","e","data","argument","chain","instance","_chain","mixin","valueOf","toJSON","define","amd","factory","global","$","Backbone","require","jQuery","Zepto","ender","previousBackbone","emulateHTTP","emulateJSON","addMethod","attribute","defaultVal","unshift","addUnderscoreMethods","Class","_isModel","modelMatcher","model","get","attributes","Events","eventSplitter","eventsApi","events","callback","opts","split","on","internalOn","listening","_events","onApi","ctx","listeners","_listeners","listenTo","_listenId","listeningTo","_listeningTo","thisId","objId","count","handlers","off","offApi","stopListening","ids","handler","_callback","onceMap","listenToOnce","offer","trigger","triggerApi","objEvents","allEvents","triggerEvents","ev","a1","a2","a3","unbind","Model","cid","cidPrefix","parse","changed","initialize","validationError","idAttribute","sync","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","fetch","success","resp","serverAttrs","wrapError","save","validate","isNew","patch","xhr","destroy","url","base","urlError","encodeURIComponent","isValid","error","modelMethods","Collection","models","comparator","_reset","reset","setOptions","add","remove","merge","addOptions","splice","insert","at","singular","removed","_removeModels","toAdd","toRemove","modelMap","sortable","sortAttr","existing","_prepareModel","_addReference","orderChanged","_removeReference","previousModels","shift","modelId","_byId","callbackOpts","_onModelEvent","event","prevId","collectionMethods","View","viewOptions","_ensureElement","delegateEventSplitter","tagName","selector","$el","_removeElement","setElement","element","undelegateEvents","_setElement","delegateEvents","el","delegate","eventName","listener","undelegate","_createElement","document","createElement","_setAttributes","methodMap","params","dataType","contentType","JSON","stringify","_method","beforeSend","setRequestHeader","processData","textStatus","errorThrown","ajax","update","delete","read","Router","routes","_bindRoutes","optionalParam","namedParam","splatParam","escapeRegExp","route","isRegExp","_routeToRegExp","router","history","fragment","_extractParameters","execute","navigate","optional","exec","param","decodeURIComponent","History","checkUrl","window","location","routeStripper","rootStripper","pathStripper","started","interval","atRoot","path","pathname","getSearch","matchRoot","decodeFragment","decodeURI","href","getHash","getPath","charAt","getFragment","_usePushState","_wantsHashChange","hashChange","_hasHashChange","documentMode","_useHashChange","_wantsPushState","pushState","_hasPushState","iframe","src","style","display","tabIndex","body","iWindow","insertBefore","firstChild","contentWindow","open","close","hash","addEventListener","attachEvent","_checkUrlInterval","setInterval","loadUrl","removeEventListener","detachEvent","removeChild","clearInterval","title","_updateHash","protoProps","staticProps","child","parent","Surrogate","__super__","previousChildViewContainer","ChildViewContainer","Container","views","_views","_indexByModel","_indexByCustom","_updateLength","view","customIndex","viewCid","findByModel","findByModelCid","modelCid","findByCid","findByCustom","findByIndex","previousWreqr","Wreqr","Handlers","_wreqrHandlers","setHandlers","setHandler","config","hasHandler","getHandler","removeHandler","removeAllHandlers","CommandStorage","_commands","getCommands","commandName","commands","command","instances","addCommand","clearCommands","Commands","storageType","_initializeStorage","_executeCommands","storage","StorageType","RequestResponse","request","EventAggregator","EA","Channel","channelName","vent","reqres","connectEvents","_connect","connectCommands","connectRequests","fn","radio","Radio","_channels","_proxyMethods","channel","_getChannel","system","messageSystems","proxyMethod","messageSystem","Marionette","Mn","previousMarionette","previousMn","Deferred","FEATURES","isEnabled","isNodeAttached","documentElement","mergeOptions","getOption","target","optionName","undefined","proxyGetOption","_getValue","normalizeMethods","normalizedHash","normalizeUIString","uiString","ui","r","normalizeUIKeys","normalizedKey","normalizeUIValues","properties","propertyVal","actAsCollection","listProperty","deprecate","message","next","_cache","_warn","_console","console","warn","log","_triggerMethod","getEventName","toUpperCase","splitter","noEventArg","methodName","triggerMethod","triggerMethodOn","fnc","MonitorDOMRefresh","handleShow","_isShown","triggerDOMRefresh","handleRender","_isRendered","_isDomRefreshMonitored","show","bindFromStrings","entity","evt","methodNames","bindToFunction","unbindFromStrings","unbindToFunction","iterateEvents","bindings","functionCallback","stringCallback","bindEntityEvents","unbindEntityEvents","proxyBindEntityEvents","proxyUnbindEntityEvents","errorProps","urlRoot","captureStackTrace","Callbacks","_deferred","_callbacks","contextOverride","promise","then","run","resolve","callbacks","Controller","Region","getEl","_ensureViewIsIntact","showOptions","isDifferentView","currentView","preventDestroy","forceShow","isChangingView","_shouldDestroyView","_shouldShowView","_parent","empty","_renderView","attachedRegion","displayedViews","attachOptions","triggerBeforeAttach","triggerAttach","_displayedViews","_triggerAttach","attachHtml","supportsRenderLifecycle","isDestroyed","parentEl","contents","detach","appendChild","emptyOptions","_destroyView","supportsDestroyLifecycle","attachView","hasView","buildRegion","regionConfig","DefaultRegionClass","_buildRegionFromSelector","regionClass","_buildRegionFromObject","_buildRegionFromRegionClass","RegionClass","RegionManager","_regions","addRegions","regionDefinitions","regions","definition","addRegion","region","_store","getRegions","removeRegion","_remove","removeRegions","emptyRegions","TemplateCache","templateId","templateCaches","cachedTemplate","load","compiledTemplate","loadTemplate","compileTemplate","$template","html","rawTemplate","Renderer","templateFunc","_behaviors","Behaviors","getTemplate","serializeModel","mixinTemplateHelpers","templateHelpers","uiBindings","configureTriggers","triggers","_buildViewTrigger","_delegateDOMEvents","eventsArg","combinedEvents","behaviorEvents","behaviorTriggers","unbindUIElements","isRendered","bindUIElements","_bindUIElements","_uiBindings","_unbindUIElements","triggerDef","preventDefault","stopPropagation","ret","_triggerEventOnBehaviors","_triggerEventOnParentLayout","behaviors","layoutView","_parentLayoutView","eventPrefix","prefixedEventName","callArgs","childEvents","normalizedChildEvents","_getImmediateChildren","_getNestedViews","children","LayoutView","ItemView","serializeData","items","serializeCollection","_renderTemplate","attachElContent","CollectionView","childViewEventPrefix","_initialEvents","_initChildViewStorage","before:show","_onBeforeShowCalled","_onShowCalled","before:attach","_onBeforeAttachCalled","attach","_onAttachCalled","initRenderBuffer","_bufferedChildren","startBuffering","isBuffering","endBuffering","nestedViews","canTriggerAttach","_triggerMethodMany","_triggerBeforeAttach","attachBuffer","_createBuffer","targets","_onCollectionAdd","_onCollectionRemove","_sortViews","_filteredSortedModels","_shouldAddChild","destroyEmptyView","ChildView","getChildView","addChild","removeChildView","checkEmpty","childView","_renderChildren","reorder","_showingEmptyView","anyModelsAdded","elsToReorder","_index","filteredOutViews","_appendReorderedChildren","resortView","_emptyViewIndex","append","destroyChildren","showEmptyView","showCollection","addedAt","viewComparator","getViewComparator","addedModel","_sortModelsBy","EmptyView","getEmptyView","addEmptyView","emptyViewOptions","buildChildView","proxyChildEvents","_getViewAndNested","renderChildView","childViewOptions","_updateIndices","_addChildView","increment","laterView","ChildViewClass","collectionView","buffer","elBuffer","createDocumentFragment","_insertBefore","_insertAfter","findPosition","destroyOptions","shouldCheckEmpty","childViews","rootEvent","CompositeView","_isRendering","resetChildViewContainer","compositeView","$container","getChildViewContainer","containerView","$childViewContainer","container","childViewContainer","substr","destroyImmediate","_firstRender","_initializeRegions","_reInitializeRegions","regionManager","showChildView","regionName","getRegion","_buildRegions","_initRegionManager","regionOptions","getRegionManager","Behavior","proxyViewProperties","parseBehaviors","BehaviorTriggersBuilder","_view","_triggers","getBehaviorsUI","triggerBuilder","buildBehaviorTriggers","_behaviorsEvents","behaviour","eventKey","behaviorsLookup","getBehaviorClass","behaviorClass","BehaviorClass","nestedBehaviors","_buildTriggerHandlersForBehavior","triggersHash","_setHandlerForBehavior","triggerKey","triggerName","AppRouter","appRoutes","controller","_getController","processAppRoutes","_processOnRoute","appRoute","_addAppRoute","routeName","routeArgs","onRoute","routePath","routeNames","reverse","Application","_initCallbacks","submodules","_initChannel","addInitializer","initializer","_regionManager","moduleNames","moduleDefinition","ModuleClass","Module","getClass","optionRegions","moduleName","app","_setupInitializersAndFinalizers","startWithParent","_initializerCallbacks","addFinalizer","_finalizerCallbacks","_isInitialized","mod","addDefinition","customArgs","_runModuleDefinition","moduleDefinitions","parentModule","_getModule","_addModuleDefinition","def","moduleClass","_getDefine","_getStartWithParent","_addStartWithParent","swp","startWithParentIsConfigured"],"mappings":"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","file":"dependency-bundle.js","sourcesContent":["//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n","//     Backbone.js 1.2.3\n\n//     (c) 2010-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(factory) {\n\n  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n  // We use `self` instead of `window` for `WebWorker` support.\n  var root = (typeof self == 'object' && self.self == self && self) ||\n            (typeof global == 'object' && global.global == global && global);\n\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (typeof define === 'function' && define.amd) {\n    define(['underscore', 'jquery', 'exports'], function(_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    });\n\n  // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore'), $;\n    try { $ = require('jquery'); } catch(e) {}\n    factory(root, exports, _, $);\n\n  // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, (root.jQuery || root.Zepto || root.ender || root.$));\n  }\n\n}(function(root, Backbone, _, $) {\n\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create a local reference to a common array method we'll want to use later.\n  var slice = Array.prototype.slice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.2.3';\n\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function() {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... this will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Proxy Backbone class methods to Underscore functions, wrapping the model's\n  // `attributes` object or collection's `models` array behind the scenes.\n  //\n  // collection.filter(function(model) { return model.get('age') > 10 });\n  // collection.each(this.addView);\n  //\n  // `Function#apply` can be slow so we use the method's arg count, if we know it.\n  var addMethod = function(length, method, attribute) {\n    switch (length) {\n      case 1: return function() {\n        return _[method](this[attribute]);\n      };\n      case 2: return function(value) {\n        return _[method](this[attribute], value);\n      };\n      case 3: return function(iteratee, context) {\n        return _[method](this[attribute], cb(iteratee, this), context);\n      };\n      case 4: return function(iteratee, defaultVal, context) {\n        return _[method](this[attribute], cb(iteratee, this), defaultVal, context);\n      };\n      default: return function() {\n        var args = slice.call(arguments);\n        args.unshift(this[attribute]);\n        return _[method].apply(_, args);\n      };\n    }\n  };\n  var addUnderscoreMethods = function(Class, methods, attribute) {\n    _.each(methods, function(length, method) {\n      if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);\n    });\n  };\n\n  // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\n  var cb = function(iteratee, instance) {\n    if (_.isFunction(iteratee)) return iteratee;\n    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\n    if (_.isString(iteratee)) return function(model) { return model.get(iteratee); };\n    return iteratee;\n  };\n  var modelMatcher = function(attrs) {\n    var matcher = _.matches(attrs);\n    return function(model) {\n      return matcher(model.attributes);\n    };\n  };\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // a custom event channel. You may bind a callback to an event with `on` or\n  // remove with `off`; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {};\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // Iterates over the standard `event, callback` (as well as the fancy multiple\n  // space-separated events `\"change blur\", callback` and jQuery-style event\n  // maps `{event: callback}`).\n  var eventsApi = function(iteratee, events, name, callback, opts) {\n    var i = 0, names;\n    if (name && typeof name === 'object') {\n      // Handle event maps.\n      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\n      for (names = _.keys(name); i < names.length ; i++) {\n        events = eventsApi(iteratee, events, names[i], name[names[i]], opts);\n      }\n    } else if (name && eventSplitter.test(name)) {\n      // Handle space separated event names by delegating them individually.\n      for (names = name.split(eventSplitter); i < names.length; i++) {\n        events = iteratee(events, names[i], callback, opts);\n      }\n    } else {\n      // Finally, standard events.\n      events = iteratee(events, name, callback, opts);\n    }\n    return events;\n  };\n\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  Events.on = function(name, callback, context) {\n    return internalOn(this, name, callback, context);\n  };\n\n  // Guard the `listening` argument from the public API.\n  var internalOn = function(obj, name, callback, context, listening) {\n    obj._events = eventsApi(onApi, obj._events || {}, name, callback, {\n        context: context,\n        ctx: obj,\n        listening: listening\n    });\n\n    if (listening) {\n      var listeners = obj._listeners || (obj._listeners = {});\n      listeners[listening.id] = listening;\n    }\n\n    return obj;\n  };\n\n  // Inversion-of-control versions of `on`. Tell *this* object to listen to\n  // an event in another object... keeping track of what it's listening to\n  // for easier unbinding later.\n  Events.listenTo =  function(obj, name, callback) {\n    if (!obj) return this;\n    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var listening = listeningTo[id];\n\n    // This object is not listening to any other events on `obj` yet.\n    // Setup the necessary references to track the listening callbacks.\n    if (!listening) {\n      var thisId = this._listenId || (this._listenId = _.uniqueId('l'));\n      listening = listeningTo[id] = {obj: obj, objId: id, id: thisId, listeningTo: listeningTo, count: 0};\n    }\n\n    // Bind callbacks on obj, and keep track of them on listening.\n    internalOn(obj, name, callback, this, listening);\n    return this;\n  };\n\n  // The reducing API that adds a callback to the `events` object.\n  var onApi = function(events, name, callback, options) {\n    if (callback) {\n      var handlers = events[name] || (events[name] = []);\n      var context = options.context, ctx = options.ctx, listening = options.listening;\n      if (listening) listening.count++;\n\n      handlers.push({ callback: callback, context: context, ctx: context || ctx, listening: listening });\n    }\n    return events;\n  };\n\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  Events.off =  function(name, callback, context) {\n    if (!this._events) return this;\n    this._events = eventsApi(offApi, this._events, name, callback, {\n        context: context,\n        listeners: this._listeners\n    });\n    return this;\n  };\n\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  Events.stopListening =  function(obj, name, callback) {\n    var listeningTo = this._listeningTo;\n    if (!listeningTo) return this;\n\n    var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n\n    for (var i = 0; i < ids.length; i++) {\n      var listening = listeningTo[ids[i]];\n\n      // If listening doesn't exist, this object is not currently\n      // listening to obj. Break out early.\n      if (!listening) break;\n\n      listening.obj.off(name, callback, this);\n    }\n    if (_.isEmpty(listeningTo)) this._listeningTo = void 0;\n\n    return this;\n  };\n\n  // The reducing API that removes a callback from the `events` object.\n  var offApi = function(events, name, callback, options) {\n    if (!events) return;\n\n    var i = 0, listening;\n    var context = options.context, listeners = options.listeners;\n\n    // Delete all events listeners and \"drop\" events.\n    if (!name && !callback && !context) {\n      var ids = _.keys(listeners);\n      for (; i < ids.length; i++) {\n        listening = listeners[ids[i]];\n        delete listeners[listening.id];\n        delete listening.listeningTo[listening.objId];\n      }\n      return;\n    }\n\n    var names = name ? [name] : _.keys(events);\n    for (; i < names.length; i++) {\n      name = names[i];\n      var handlers = events[name];\n\n      // Bail out if there are no events stored.\n      if (!handlers) break;\n\n      // Replace events if there are any remaining.  Otherwise, clean up.\n      var remaining = [];\n      for (var j = 0; j < handlers.length; j++) {\n        var handler = handlers[j];\n        if (\n          callback && callback !== handler.callback &&\n            callback !== handler.callback._callback ||\n              context && context !== handler.context\n        ) {\n          remaining.push(handler);\n        } else {\n          listening = handler.listening;\n          if (listening && --listening.count === 0) {\n            delete listeners[listening.id];\n            delete listening.listeningTo[listening.objId];\n          }\n        }\n      }\n\n      // Update tail event if the list has any events.  Otherwise, clean up.\n      if (remaining.length) {\n        events[name] = remaining;\n      } else {\n        delete events[name];\n      }\n    }\n    if (_.size(events)) return events;\n  };\n\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, its listener will be removed. If multiple events\n  // are passed in using the space-separated syntax, the handler will fire\n  // once for each event, not once for a combination of all events.\n  Events.once =  function(name, callback, context) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.off, this));\n    return this.on(events, void 0, context);\n  };\n\n  // Inversion-of-control versions of `once`.\n  Events.listenToOnce =  function(obj, name, callback) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.stopListening, this, obj));\n    return this.listenTo(obj, events);\n  };\n\n  // Reduces the event callbacks into a map of `{event: onceWrapper}`.\n  // `offer` unbinds the `onceWrapper` after it has been called.\n  var onceMap = function(map, name, callback, offer) {\n    if (callback) {\n      var once = map[name] = _.once(function() {\n        offer(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n    }\n    return map;\n  };\n\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  Events.trigger =  function(name) {\n    if (!this._events) return this;\n\n    var length = Math.max(0, arguments.length - 1);\n    var args = Array(length);\n    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\n\n    eventsApi(triggerApi, this._events, name, void 0, args);\n    return this;\n  };\n\n  // Handles triggering the appropriate event callbacks.\n  var triggerApi = function(objEvents, name, cb, args) {\n    if (objEvents) {\n      var events = objEvents[name];\n      var allEvents = objEvents.all;\n      if (events && allEvents) allEvents = allEvents.slice();\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, [name].concat(args));\n    }\n    return objEvents;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n    }\n  };\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function(attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.cid = _.uniqueId(this.cidPrefix);\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    attrs = _.defaults({}, attrs, _.result(this, 'defaults'));\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // The value returned during the last failed validation.\n    validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // The prefix is used to create the client id which is used to identify models locally.\n    // You may want to override this if you're experiencing name clashes with model ids.\n    cidPrefix: 'c',\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Get the value of an attribute.\n    get: function(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function(attr) {\n      return _.escape(this.get(attr));\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Special-cased proxy to underscore's `_.matches` method.\n    matches: function(attrs) {\n      return !!_.iteratee(attrs, this)(this.attributes);\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function(key, val, options) {\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      var unset      = options.unset;\n      var silent     = options.silent;\n      var changes    = [];\n      var changing   = this._changing;\n      this._changing = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n\n      var current = this.attributes;\n      var changed = this.changed;\n      var prev    = this._previousAttributes;\n\n      // For each `set` attribute, update or delete the current value.\n      for (var attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          changed[attr] = val;\n        } else {\n          delete changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Update the `id`.\n      this.id = this.get(this.idAttribute);\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = options;\n        for (var i = 0; i < changes.length; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n    },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function(options) {\n      var attrs = {};\n      for (var key in this.attributes) attrs[key] = void 0;\n      return this.set(attrs, _.extend({}, options, {unset: true}));\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      var changed = {};\n      for (var attr in diff) {\n        var val = diff[attr];\n        if (_.isEqual(old[attr], val)) continue;\n        changed[attr] = val;\n      }\n      return _.size(changed) ? changed : false;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Fetch the model from the server, merging the response with the model's\n    // local attributes. Any changed attributes will trigger a \"change\" event.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (!model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function(key, val, options) {\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({validate: true, parse: true}, options);\n      var wait = options.wait;\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !wait) {\n        if (!this.set(attrs, options)) return false;\n      } else {\n        if (!this._validate(attrs, options)) return false;\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      var model = this;\n      var success = options.success;\n      var attributes = this.attributes;\n      options.success = function(resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\n        if (serverAttrs && !model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\n      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\n\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\n      var xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      this.attributes = attributes;\n\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n      var wait = options.wait;\n\n      var destroy = function() {\n        model.stopListening();\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function(resp) {\n        if (wait) destroy();\n        if (success) success.call(options.context, model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      var xhr = false;\n      if (this.isNew()) {\n        _.defer(options.success);\n      } else {\n        wrapError(this, options);\n        xhr = this.sync('delete', this, options);\n      }\n      if (!wait) destroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function() {\n      var base =\n        _.result(this, 'urlRoot') ||\n        _.result(this.collection, 'url') ||\n        urlError();\n      if (this.isNew()) return base;\n      var id = this.get(this.idAttribute);\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function() {\n      return !this.has(this.idAttribute);\n    },\n\n    // Check if the model is currently in a valid state.\n    isValid: function(options) {\n      return this._validate({}, _.defaults({validate: true}, options));\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n      return false;\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Model, mapped to the\n  // number of arguments they take.\n  var modelMethods = { keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,\n      omit: 0, chain: 1, isEmpty: 1 };\n\n  // Mix in each Underscore method as a proxy to `Model#attributes`.\n  addUnderscoreMethods(Model, modelMethods, 'attributes');\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analogous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function(models, options) {\n    options || (options = {});\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({silent: true}, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = {add: true, remove: true, merge: true};\n  var addOptions = {add: true, remove: false};\n\n  // Splices `insert` into `array` at index `at`.\n  var splice = function(array, insert, at) {\n    at = Math.min(Math.max(at, 0), array.length);\n    var tail = Array(array.length - at);\n    var length = insert.length;\n    for (var i = 0; i < tail.length; i++) tail[i] = array[i + at];\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\n  };\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function(options) {\n      return this.map(function(model) { return model.toJSON(options); });\n    },\n\n    // Proxy `Backbone.sync` by default.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Add a model, or list of models to the set. `models` may be Backbone\n    // Models or raw JavaScript objects to be converted to Models, or any\n    // combination of the two.\n    add: function(models, options) {\n      return this.set(models, _.extend({merge: false}, options, addOptions));\n    },\n\n    // Remove a model, or a list of models from the set.\n    remove: function(models, options) {\n      options = _.extend({}, options);\n      var singular = !_.isArray(models);\n      models = singular ? [models] : _.clone(models);\n      var removed = this._removeModels(models, options);\n      if (!options.silent && removed) this.trigger('update', this, options);\n      return singular ? removed[0] : removed;\n    },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function(models, options) {\n      if (models == null) return;\n\n      options = _.defaults({}, options, setOptions);\n      if (options.parse && !this._isModel(models)) models = this.parse(models, options);\n\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n\n      var at = options.at;\n      if (at != null) at = +at;\n      if (at < 0) at += this.length + 1;\n\n      var set = [];\n      var toAdd = [];\n      var toRemove = [];\n      var modelMap = {};\n\n      var add = options.add;\n      var merge = options.merge;\n      var remove = options.remove;\n\n      var sort = false;\n      var sortable = this.comparator && (at == null) && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      var model;\n      for (var i = 0; i < models.length; i++) {\n        model = models[i];\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        var existing = this.get(model);\n        if (existing) {\n          if (merge && model !== existing) {\n            var attrs = this._isModel(model) ? model.attributes : model;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\n          }\n          if (!modelMap[existing.cid]) {\n            modelMap[existing.cid] = true;\n            set.push(existing);\n          }\n          models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(model, options);\n          if (model) {\n            toAdd.push(model);\n            this._addReference(model, options);\n            modelMap[model.cid] = true;\n            set.push(model);\n          }\n        }\n      }\n\n      // Remove stale models.\n      if (remove) {\n        for (i = 0; i < this.length; i++) {\n          model = this.models[i];\n          if (!modelMap[model.cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this._removeModels(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      var orderChanged = false;\n      var replace = !sortable && add && remove;\n      if (set.length && replace) {\n        orderChanged = this.length != set.length || _.some(this.models, function(model, index) {\n          return model !== set[index];\n        });\n        this.models.length = 0;\n        splice(this.models, set, 0);\n        this.length = this.models.length;\n      } else if (toAdd.length) {\n        if (sortable) sort = true;\n        splice(this.models, toAdd, at == null ? this.length : at);\n        this.length = this.models.length;\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({silent: true});\n\n      // Unless silenced, it's time to fire all appropriate add/sort events.\n      if (!options.silent) {\n        for (i = 0; i < toAdd.length; i++) {\n          if (at != null) options.index = at + i;\n          model = toAdd[i];\n          model.trigger('add', model, this, options);\n        }\n        if (sort || orderChanged) this.trigger('sort', this, options);\n        if (toAdd.length || toRemove.length) this.trigger('update', this, options);\n      }\n\n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function(models, options) {\n      options = options ? _.clone(options) : {};\n      for (var i = 0; i < this.models.length; i++) {\n        this._removeReference(this.models[i], options);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({silent: true}, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n\n    // Add a model to the end of the collection.\n    push: function(model, options) {\n      return this.add(model, _.extend({at: this.length}, options));\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function(options) {\n      var model = this.at(this.length - 1);\n      return this.remove(model, options);\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function(model, options) {\n      return this.add(model, _.extend({at: 0}, options));\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function(options) {\n      var model = this.at(0);\n      return this.remove(model, options);\n    },\n\n    // Slice out a sub-array of models from the collection.\n    slice: function() {\n      return slice.apply(this.models, arguments);\n    },\n\n    // Get a model from the set by id.\n    get: function(obj) {\n      if (obj == null) return void 0;\n      var id = this.modelId(this._isModel(obj) ? obj.attributes : obj);\n      return this._byId[obj] || this._byId[id] || this._byId[obj.cid];\n    },\n\n    // Get the model at the given index.\n    at: function(index) {\n      if (index < 0) index += this.length;\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function(attrs, first) {\n      return this[first ? 'find' : 'filter'](attrs);\n    },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function(attrs) {\n      return this.where(attrs, true);\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function(options) {\n      var comparator = this.comparator;\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n\n      var length = comparator.length;\n      if (_.isFunction(comparator)) comparator = _.bind(comparator, this);\n\n      // Run sort based on type of `comparator`.\n      if (length === 1 || _.isString(comparator)) {\n        this.models = this.sortBy(comparator);\n      } else {\n        this.models.sort(comparator);\n      }\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function(attr) {\n      return _.invoke(this.models, 'get', attr);\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var success = options.success;\n      var collection = this;\n      options.success = function(resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success.call(options.context, collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function(model, options) {\n      options = options ? _.clone(options) : {};\n      var wait = options.wait;\n      model = this._prepareModel(model, options);\n      if (!model) return false;\n      if (!wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function(model, resp, callbackOpts) {\n        if (wait) collection.add(model, callbackOpts);\n        if (success) success.call(callbackOpts.context, model, resp, callbackOpts);\n      };\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new collection with an identical list of models as this one.\n    clone: function() {\n      return new this.constructor(this.models, {\n        model: this.model,\n        comparator: this.comparator\n      });\n    },\n\n    // Define how to uniquely identify models in the collection.\n    modelId: function (attrs) {\n      return attrs[this.model.prototype.idAttribute || 'id'];\n    },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function() {\n      this.length = 0;\n      this.models = [];\n      this._byId  = {};\n    },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function(attrs, options) {\n      if (this._isModel(attrs)) {\n        if (!attrs.collection) attrs.collection = this;\n        return attrs;\n      }\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n\n    // Internal method called by both remove and set.\n    _removeModels: function(models, options) {\n      var removed = [];\n      for (var i = 0; i < models.length; i++) {\n        var model = this.get(models[i]);\n        if (!model) continue;\n\n        var index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n\n        removed.push(model);\n        this._removeReference(model, options);\n      }\n      return removed.length ? removed : false;\n    },\n\n    // Method for checking whether an object should be considered a model for\n    // the purposes of adding to the collection.\n    _isModel: function (model) {\n      return model instanceof Model;\n    },\n\n    // Internal method to create a model's ties to a collection.\n    _addReference: function(model, options) {\n      this._byId[model.cid] = model;\n      var id = this.modelId(model.attributes);\n      if (id != null) this._byId[id] = model;\n      model.on('all', this._onModelEvent, this);\n    },\n\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function(model, options) {\n      delete this._byId[model.cid];\n      var id = this.modelId(model.attributes);\n      if (id != null) delete this._byId[id];\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function(event, model, collection, options) {\n      if ((event === 'add' || event === 'remove') && collection !== this) return;\n      if (event === 'destroy') this.remove(model, options);\n      if (event === 'change') {\n        var prevId = this.modelId(model.previousAttributes());\n        var id = this.modelId(model.attributes);\n        if (prevId !== id) {\n          if (prevId != null) delete this._byId[prevId];\n          if (id != null) this._byId[id] = model;\n        }\n      }\n      this.trigger.apply(this, arguments);\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var collectionMethods = { forEach: 3, each: 3, map: 3, collect: 3, reduce: 4,\n      foldl: 4, inject: 4, reduceRight: 4, foldr: 4, find: 3, detect: 3, filter: 3,\n      select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 3, includes: 3,\n      contains: 3, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,\n      head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,\n      without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,\n      isEmpty: 1, chain: 1, sample: 3, partition: 3, groupBy: 3, countBy: 3,\n      sortBy: 3, indexBy: 3};\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n  addUnderscoreMethods(Collection, collectionMethods, 'models');\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be set as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function() {\n      return this;\n    },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function() {\n      this._removeElement();\n      this.stopListening();\n      return this;\n    },\n\n    // Remove this view's element from the document and all event listeners\n    // attached to it. Exposed for subclasses using an alternative DOM\n    // manipulation API.\n    _removeElement: function() {\n      this.$el.remove();\n    },\n\n    // Change the view's element (`this.el` property) and re-delegate the\n    // view's events on the new element.\n    setElement: function(element) {\n      this.undelegateEvents();\n      this._setElement(element);\n      this.delegateEvents();\n      return this;\n    },\n\n    // Creates the `this.el` and `this.$el` references for this view using the\n    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n    // context or an element. Subclasses can override this to utilize an\n    // alternative DOM manipulation API and are only required to set the\n    // `this.el` property.\n    _setElement: function(el) {\n      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n      this.el = this.$el[0];\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    delegateEvents: function(events) {\n      events || (events = _.result(this, 'events'));\n      if (!events) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[method];\n        if (!method) continue;\n        var match = key.match(delegateEventSplitter);\n        this.delegate(match[1], match[2], _.bind(method, this));\n      }\n      return this;\n    },\n\n    // Add a single event listener to the view's element (or a child element\n    // using `selector`). This only works for delegate-able events: not `focus`,\n    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n    delegate: function(eventName, selector, listener) {\n      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Clears all callbacks previously bound to the view by `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function() {\n      if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n\n    // A finer-grained `undelegateEvents` for removing a single delegated event.\n    // `selector` and `listener` are both optional.\n    undelegate: function(eventName, selector, listener) {\n      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Produces a DOM element to be assigned to your view. Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _createElement: function(tagName) {\n      return document.createElement(tagName);\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        this.setElement(this._createElement(_.result(this, 'tagName')));\n        this._setAttributes(attrs);\n      } else {\n        this.setElement(_.result(this, 'el'));\n      }\n    },\n\n    // Set attributes from a hash on this view's element.  Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _setAttributes: function(attributes) {\n      this.$el.attr(attributes);\n    }\n\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function(method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = {type: type, dataType: 'json'};\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {model: params.data} : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function(xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // Pass along `textStatus` and `errorThrown` from jQuery.\n    var error = options.error;\n    options.error = function(xhr, textStatus, errorThrown) {\n      options.textStatus = textStatus;\n      options.errorThrown = errorThrown;\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\n    };\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch':  'PATCH',\n    'delete': 'DELETE',\n    'read':   'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function() {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function(options) {\n    options || (options = {});\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam    = /(\\(\\?)?:\\w+/g;\n  var splatParam    = /\\*\\w+/g;\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function(route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function(fragment) {\n        var args = router._extractParameters(route, fragment);\n        if (router.execute(callback, args, name) !== false) {\n          router.trigger.apply(router, ['route:' + name].concat(args));\n          router.trigger('route', name, args);\n          Backbone.history.trigger('route', router, name, args);\n        }\n      });\n      return this;\n    },\n\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function(callback, args, name) {\n      if (callback) callback.apply(this, args);\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route, routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function(route) {\n      route = route.replace(escapeRegExp, '\\\\$&')\n                   .replace(optionalParam, '(?:$1)?')\n                   .replace(namedParam, function(match, optional) {\n                     return optional ? match : '([^/?]+)';\n                   })\n                   .replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function(param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function() {\n    this.handlers = [];\n    this.checkUrl = _.bind(this.checkUrl, this);\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for stripping urls of hash.\n  var pathStripper = /#.*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Are we at the app root?\n    atRoot: function() {\n      var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n      return path === this.root && !this.getSearch();\n    },\n\n    // Does the pathname match the root?\n    matchRoot: function() {\n      var path = this.decodeFragment(this.location.pathname);\n      var root = path.slice(0, this.root.length - 1) + '/';\n      return root === this.root;\n    },\n\n    // Unicode characters in `location.pathname` are percent encoded so they're\n    // decoded for comparison. `%25` should not be decoded since it may be part\n    // of an encoded parameter.\n    decodeFragment: function(fragment) {\n      return decodeURI(fragment.replace(/%25/g, '%2525'));\n    },\n\n    // In IE6, the hash fragment and search params are incorrect if the\n    // fragment contains `?`.\n    getSearch: function() {\n      var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n      return match ? match[0] : '';\n    },\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the pathname and search params, without the root.\n    getPath: function() {\n      var path = this.decodeFragment(\n        this.location.pathname + this.getSearch()\n      ).slice(this.root.length - 1);\n      return path.charAt(0) === '/' ? path.slice(1) : path;\n    },\n\n    // Get the cross-browser normalized URL fragment from the path or hash.\n    getFragment: function(fragment) {\n      if (fragment == null) {\n        if (this._usePushState || !this._wantsHashChange) {\n          fragment = this.getPath();\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function(options) {\n      if (History.started) throw new Error('Backbone.history has already been started');\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options          = _.extend({root: '/'}, this.options, options);\n      this.root             = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._hasHashChange   = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);\n      this._useHashChange   = this._wantsHashChange && this._hasHashChange;\n      this._wantsPushState  = !!this.options.pushState;\n      this._hasPushState    = !!(this.history && this.history.pushState);\n      this._usePushState    = this._wantsPushState && this._hasPushState;\n      this.fragment         = this.getFragment();\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          var root = this.root.slice(0, -1) || '/';\n          this.location.replace(root + '#' + this.getPath());\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot()) {\n          this.navigate(this.getHash(), {replace: true});\n        }\n\n      }\n\n      // Proxy an iframe to handle location events if the browser doesn't\n      // support the `hashchange` event, HTML5 history, or the user wants\n      // `hashChange` but not `pushState`.\n      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n        this.iframe = document.createElement('iframe');\n        this.iframe.src = 'javascript:0';\n        this.iframe.style.display = 'none';\n        this.iframe.tabIndex = -1;\n        var body = document.body;\n        // Using `appendChild` will throw on IE < 9 if the document is not ready.\n        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\n        iWindow.document.open();\n        iWindow.document.close();\n        iWindow.location.hash = '#' + this.fragment;\n      }\n\n      // Add a cross-platform `addEventListener` shim for older browsers.\n      var addEventListener = window.addEventListener || function (eventName, listener) {\n        return attachEvent('on' + eventName, listener);\n      };\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._usePushState) {\n        addEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        addEventListener('hashchange', this.checkUrl, false);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function() {\n      // Add a cross-platform `removeEventListener` shim for older browsers.\n      var removeEventListener = window.removeEventListener || function (eventName, listener) {\n        return detachEvent('on' + eventName, listener);\n      };\n\n      // Remove window listeners.\n      if (this._usePushState) {\n        removeEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        removeEventListener('hashchange', this.checkUrl, false);\n      }\n\n      // Clean up the iframe if necessary.\n      if (this.iframe) {\n        document.body.removeChild(this.iframe);\n        this.iframe = null;\n      }\n\n      // Some environments will throw when clearing an undefined interval.\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function(route, callback) {\n      this.handlers.unshift({route: route, callback: callback});\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function(e) {\n      var current = this.getFragment();\n\n      // If the user pressed the back button, the iframe's hash will have\n      // changed and we should use that for comparison.\n      if (current === this.fragment && this.iframe) {\n        current = this.getHash(this.iframe.contentWindow);\n      }\n\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function(fragment) {\n      // If the root doesn't match, no routes can match either.\n      if (!this.matchRoot()) return false;\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.some(this.handlers, function(handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {trigger: !!options};\n\n      // Normalize the fragment.\n      fragment = this.getFragment(fragment || '');\n\n      // Don't include a trailing slash on the root.\n      var root = this.root;\n      if (fragment === '' || fragment.charAt(0) === '?') {\n        root = root.slice(0, -1) || '/';\n      }\n      var url = root + fragment;\n\n      // Strip the hash and decode for matching.\n      fragment = this.decodeFragment(fragment.replace(pathStripper, ''));\n\n      if (this.fragment === fragment) return;\n      this.fragment = fragment;\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._usePushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n        if (this.iframe && (fragment !== this.getHash(this.iframe.contentWindow))) {\n          var iWindow = this.iframe.contentWindow;\n\n          // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n          if (!options.replace) {\n            iWindow.document.open();\n            iWindow.document.close();\n          }\n\n          this._updateHash(iWindow.location, fragment, options.replace);\n        }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      } else {\n        return this.location.assign(url);\n      }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History;\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent` constructor function.\n    var Surrogate = function(){ this.constructor = child; };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate;\n\n    // Add prototype properties (instance properties) to the subclass,\n    // if supplied.\n    if (protoProps) _.extend(child.prototype, protoProps);\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function(model, options) {\n    var error = options.error;\n    options.error = function(resp) {\n      if (error) error.call(options.context, model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n\n}));\n","// Backbone.BabySitter\n// -------------------\n// v0.1.11\n//\n// Copyright (c)2016 Derick Bailey, Muted Solutions, LLC.\n// Distributed under MIT license\n//\n// http://github.com/marionettejs/backbone.babysitter\n\n(function(root, factory) {\n\n  if (typeof define === 'function' && define.amd) {\n    define(['backbone', 'underscore'], function(Backbone, _) {\n      return factory(Backbone, _);\n    });\n  } else if (typeof exports !== 'undefined') {\n    var Backbone = require('backbone');\n    var _ = require('underscore');\n    module.exports = factory(Backbone, _);\n  } else {\n    factory(root.Backbone, root._);\n  }\n\n}(this, function(Backbone, _) {\n  'use strict';\n\n  var previousChildViewContainer = Backbone.ChildViewContainer;\n\n  // BabySitter.ChildViewContainer\n  // -----------------------------\n  //\n  // Provide a container to store, retrieve and\n  // shut down child views.\n  \n  Backbone.ChildViewContainer = (function (Backbone, _) {\n  \n    // Container Constructor\n    // ---------------------\n  \n    var Container = function(views){\n      this._views = {};\n      this._indexByModel = {};\n      this._indexByCustom = {};\n      this._updateLength();\n  \n      _.each(views, this.add, this);\n    };\n  \n    // Container Methods\n    // -----------------\n  \n    _.extend(Container.prototype, {\n  \n      // Add a view to this container. Stores the view\n      // by `cid` and makes it searchable by the model\n      // cid (and model itself). Optionally specify\n      // a custom key to store an retrieve the view.\n      add: function(view, customIndex){\n        var viewCid = view.cid;\n  \n        // store the view\n        this._views[viewCid] = view;\n  \n        // index it by model\n        if (view.model){\n          this._indexByModel[view.model.cid] = viewCid;\n        }\n  \n        // index by custom\n        if (customIndex){\n          this._indexByCustom[customIndex] = viewCid;\n        }\n  \n        this._updateLength();\n        return this;\n      },\n  \n      // Find a view by the model that was attached to\n      // it. Uses the model's `cid` to find it.\n      findByModel: function(model){\n        return this.findByModelCid(model.cid);\n      },\n  \n      // Find a view by the `cid` of the model that was attached to\n      // it. Uses the model's `cid` to find the view `cid` and\n      // retrieve the view using it.\n      findByModelCid: function(modelCid){\n        var viewCid = this._indexByModel[modelCid];\n        return this.findByCid(viewCid);\n      },\n  \n      // Find a view by a custom indexer.\n      findByCustom: function(index){\n        var viewCid = this._indexByCustom[index];\n        return this.findByCid(viewCid);\n      },\n  \n      // Find by index. This is not guaranteed to be a\n      // stable index.\n      findByIndex: function(index){\n        return _.values(this._views)[index];\n      },\n  \n      // retrieve a view by its `cid` directly\n      findByCid: function(cid){\n        return this._views[cid];\n      },\n  \n      // Remove a view\n      remove: function(view){\n        var viewCid = view.cid;\n  \n        // delete model index\n        if (view.model){\n          delete this._indexByModel[view.model.cid];\n        }\n  \n        // delete custom index\n        _.any(this._indexByCustom, function(cid, key) {\n          if (cid === viewCid) {\n            delete this._indexByCustom[key];\n            return true;\n          }\n        }, this);\n  \n        // remove the view from the container\n        delete this._views[viewCid];\n  \n        // update the length\n        this._updateLength();\n        return this;\n      },\n  \n      // Call a method on every view in the container,\n      // passing parameters to the call method one at a\n      // time, like `function.call`.\n      call: function(method){\n        this.apply(method, _.tail(arguments));\n      },\n  \n      // Apply a method on every view in the container,\n      // passing parameters to the call method one at a\n      // time, like `function.apply`.\n      apply: function(method, args){\n        _.each(this._views, function(view){\n          if (_.isFunction(view[method])){\n            view[method].apply(view, args || []);\n          }\n        });\n      },\n  \n      // Update the `.length` attribute on this container\n      _updateLength: function(){\n        this.length = _.size(this._views);\n      }\n    });\n  \n    // Borrowing this code from Backbone.Collection:\n    // http://backbonejs.org/docs/backbone.html#section-106\n    //\n    // Mix in methods from Underscore, for iteration, and other\n    // collection related features.\n    var methods = ['forEach', 'each', 'map', 'find', 'detect', 'filter',\n      'select', 'reject', 'every', 'all', 'some', 'any', 'include',\n      'contains', 'invoke', 'toArray', 'first', 'initial', 'rest',\n      'last', 'without', 'isEmpty', 'pluck', 'reduce'];\n  \n    _.each(methods, function(method) {\n      Container.prototype[method] = function() {\n        var views = _.values(this._views);\n        var args = [views].concat(_.toArray(arguments));\n        return _[method].apply(_, args);\n      };\n    });\n  \n    // return the public API\n    return Container;\n  })(Backbone, _);\n  \n\n  Backbone.ChildViewContainer.VERSION = '0.1.11';\n\n  Backbone.ChildViewContainer.noConflict = function () {\n    Backbone.ChildViewContainer = previousChildViewContainer;\n    return this;\n  };\n\n  return Backbone.ChildViewContainer;\n\n}));\n","// Backbone.Wreqr (Backbone.Marionette)\n// ----------------------------------\n// v1.3.6\n//\n// Copyright (c)2016 Derick Bailey, Muted Solutions, LLC.\n// Distributed under MIT license\n//\n// http://github.com/marionettejs/backbone.wreqr\n\n\n(function(root, factory) {\n\n  if (typeof define === 'function' && define.amd) {\n    define(['backbone', 'underscore'], function(Backbone, _) {\n      return factory(Backbone, _);\n    });\n  } else if (typeof exports !== 'undefined') {\n    var Backbone = require('backbone');\n    var _ = require('underscore');\n    module.exports = factory(Backbone, _);\n  } else {\n    factory(root.Backbone, root._);\n  }\n\n}(this, function(Backbone, _) {\n  \"use strict\";\n\n  var previousWreqr = Backbone.Wreqr;\n\n  var Wreqr = Backbone.Wreqr = {};\n\n  Backbone.Wreqr.VERSION = '1.3.6';\n\n  Backbone.Wreqr.noConflict = function () {\n    Backbone.Wreqr = previousWreqr;\n    return this;\n  };\n\n  // Handlers\n  // --------\n  // A registry of functions to call, given a name\n  \n  Wreqr.Handlers = (function(Backbone, _){\n    \"use strict\";\n    \n    // Constructor\n    // -----------\n  \n    var Handlers = function(options){\n      this.options = options;\n      this._wreqrHandlers = {};\n      \n      if (_.isFunction(this.initialize)){\n        this.initialize(options);\n      }\n    };\n  \n    Handlers.extend = Backbone.Model.extend;\n  \n    // Instance Members\n    // ----------------\n  \n    _.extend(Handlers.prototype, Backbone.Events, {\n  \n      // Add multiple handlers using an object literal configuration\n      setHandlers: function(handlers){\n        _.each(handlers, function(handler, name){\n          var context = null;\n  \n          if (_.isObject(handler) && !_.isFunction(handler)){\n            context = handler.context;\n            handler = handler.callback;\n          }\n  \n          this.setHandler(name, handler, context);\n        }, this);\n      },\n  \n      // Add a handler for the given name, with an\n      // optional context to run the handler within\n      setHandler: function(name, handler, context){\n        var config = {\n          callback: handler,\n          context: context\n        };\n  \n        this._wreqrHandlers[name] = config;\n  \n        this.trigger(\"handler:add\", name, handler, context);\n      },\n  \n      // Determine whether or not a handler is registered\n      hasHandler: function(name){\n        return !! this._wreqrHandlers[name];\n      },\n  \n      // Get the currently registered handler for\n      // the specified name. Throws an exception if\n      // no handler is found.\n      getHandler: function(name){\n        var config = this._wreqrHandlers[name];\n  \n        if (!config){\n          return;\n        }\n  \n        return function(){\n          return config.callback.apply(config.context, arguments);\n        };\n      },\n  \n      // Remove a handler for the specified name\n      removeHandler: function(name){\n        delete this._wreqrHandlers[name];\n      },\n  \n      // Remove all handlers from this registry\n      removeAllHandlers: function(){\n        this._wreqrHandlers = {};\n      }\n    });\n  \n    return Handlers;\n  })(Backbone, _);\n  \n  // Wreqr.CommandStorage\n  // --------------------\n  //\n  // Store and retrieve commands for execution.\n  Wreqr.CommandStorage = (function(){\n    \"use strict\";\n  \n    // Constructor function\n    var CommandStorage = function(options){\n      this.options = options;\n      this._commands = {};\n  \n      if (_.isFunction(this.initialize)){\n        this.initialize(options);\n      }\n    };\n  \n    // Instance methods\n    _.extend(CommandStorage.prototype, Backbone.Events, {\n  \n      // Get an object literal by command name, that contains\n      // the `commandName` and the `instances` of all commands\n      // represented as an array of arguments to process\n      getCommands: function(commandName){\n        var commands = this._commands[commandName];\n  \n        // we don't have it, so add it\n        if (!commands){\n  \n          // build the configuration\n          commands = {\n            command: commandName, \n            instances: []\n          };\n  \n          // store it\n          this._commands[commandName] = commands;\n        }\n  \n        return commands;\n      },\n  \n      // Add a command by name, to the storage and store the\n      // args for the command\n      addCommand: function(commandName, args){\n        var command = this.getCommands(commandName);\n        command.instances.push(args);\n      },\n  \n      // Clear all commands for the given `commandName`\n      clearCommands: function(commandName){\n        var command = this.getCommands(commandName);\n        command.instances = [];\n      }\n    });\n  \n    return CommandStorage;\n  })();\n  \n  // Wreqr.Commands\n  // --------------\n  //\n  // A simple command pattern implementation. Register a command\n  // handler and execute it.\n  Wreqr.Commands = (function(Wreqr, _){\n    \"use strict\";\n  \n    return Wreqr.Handlers.extend({\n      // default storage type\n      storageType: Wreqr.CommandStorage,\n  \n      constructor: function(options){\n        this.options = options || {};\n  \n        this._initializeStorage(this.options);\n        this.on(\"handler:add\", this._executeCommands, this);\n  \n        Wreqr.Handlers.prototype.constructor.apply(this, arguments);\n      },\n  \n      // Execute a named command with the supplied args\n      execute: function(name){\n        name = arguments[0];\n        var args = _.rest(arguments);\n  \n        if (this.hasHandler(name)){\n          this.getHandler(name).apply(this, args);\n        } else {\n          this.storage.addCommand(name, args);\n        }\n  \n      },\n  \n      // Internal method to handle bulk execution of stored commands\n      _executeCommands: function(name, handler, context){\n        var command = this.storage.getCommands(name);\n  \n        // loop through and execute all the stored command instances\n        _.each(command.instances, function(args){\n          handler.apply(context, args);\n        });\n  \n        this.storage.clearCommands(name);\n      },\n  \n      // Internal method to initialize storage either from the type's\n      // `storageType` or the instance `options.storageType`.\n      _initializeStorage: function(options){\n        var storage;\n  \n        var StorageType = options.storageType || this.storageType;\n        if (_.isFunction(StorageType)){\n          storage = new StorageType();\n        } else {\n          storage = StorageType;\n        }\n  \n        this.storage = storage;\n      }\n    });\n  \n  })(Wreqr, _);\n  \n  // Wreqr.RequestResponse\n  // ---------------------\n  //\n  // A simple request/response implementation. Register a\n  // request handler, and return a response from it\n  Wreqr.RequestResponse = (function(Wreqr, _){\n    \"use strict\";\n  \n    return Wreqr.Handlers.extend({\n      request: function(name){\n        if (this.hasHandler(name)) {\n          return this.getHandler(name).apply(this, _.rest(arguments));\n        }\n      }\n    });\n  \n  })(Wreqr, _);\n  \n  // Event Aggregator\n  // ----------------\n  // A pub-sub object that can be used to decouple various parts\n  // of an application through event-driven architecture.\n  \n  Wreqr.EventAggregator = (function(Backbone, _){\n    \"use strict\";\n    var EA = function(){};\n  \n    // Copy the `extend` function used by Backbone's classes\n    EA.extend = Backbone.Model.extend;\n  \n    // Copy the basic Backbone.Events on to the event aggregator\n    _.extend(EA.prototype, Backbone.Events);\n  \n    return EA;\n  })(Backbone, _);\n  \n  // Wreqr.Channel\n  // --------------\n  //\n  // An object that wraps the three messaging systems:\n  // EventAggregator, RequestResponse, Commands\n  Wreqr.Channel = (function(Wreqr){\n    \"use strict\";\n  \n    var Channel = function(channelName) {\n      this.vent        = new Backbone.Wreqr.EventAggregator();\n      this.reqres      = new Backbone.Wreqr.RequestResponse();\n      this.commands    = new Backbone.Wreqr.Commands();\n      this.channelName = channelName;\n    };\n  \n    _.extend(Channel.prototype, {\n  \n      // Remove all handlers from the messaging systems of this channel\n      reset: function() {\n        this.vent.off();\n        this.vent.stopListening();\n        this.reqres.removeAllHandlers();\n        this.commands.removeAllHandlers();\n        return this;\n      },\n  \n      // Connect a hash of events; one for each messaging system\n      connectEvents: function(hash, context) {\n        this._connect('vent', hash, context);\n        return this;\n      },\n  \n      connectCommands: function(hash, context) {\n        this._connect('commands', hash, context);\n        return this;\n      },\n  \n      connectRequests: function(hash, context) {\n        this._connect('reqres', hash, context);\n        return this;\n      },\n  \n      // Attach the handlers to a given message system `type`\n      _connect: function(type, hash, context) {\n        if (!hash) {\n          return;\n        }\n  \n        context = context || this;\n        var method = (type === 'vent') ? 'on' : 'setHandler';\n  \n        _.each(hash, function(fn, eventName) {\n          this[type][method](eventName, _.bind(fn, context));\n        }, this);\n      }\n    });\n  \n  \n    return Channel;\n  })(Wreqr);\n  \n  // Wreqr.Radio\n  // --------------\n  //\n  // An object that lets you communicate with many channels.\n  Wreqr.radio = (function(Wreqr, _){\n    \"use strict\";\n  \n    var Radio = function() {\n      this._channels = {};\n      this.vent = {};\n      this.commands = {};\n      this.reqres = {};\n      this._proxyMethods();\n    };\n  \n    _.extend(Radio.prototype, {\n  \n      channel: function(channelName) {\n        if (!channelName) {\n          throw new Error('Channel must receive a name');\n        }\n  \n        return this._getChannel( channelName );\n      },\n  \n      _getChannel: function(channelName) {\n        var channel = this._channels[channelName];\n  \n        if(!channel) {\n          channel = new Wreqr.Channel(channelName);\n          this._channels[channelName] = channel;\n        }\n  \n        return channel;\n      },\n  \n      _proxyMethods: function() {\n        _.each(['vent', 'commands', 'reqres'], function(system) {\n          _.each( messageSystems[system], function(method) {\n            this[system][method] = proxyMethod(this, system, method);\n          }, this);\n        }, this);\n      }\n    });\n  \n  \n    var messageSystems = {\n      vent: [\n        'on',\n        'off',\n        'trigger',\n        'once',\n        'stopListening',\n        'listenTo',\n        'listenToOnce'\n      ],\n  \n      commands: [\n        'execute',\n        'setHandler',\n        'setHandlers',\n        'removeHandler',\n        'removeAllHandlers'\n      ],\n  \n      reqres: [\n        'request',\n        'setHandler',\n        'setHandlers',\n        'removeHandler',\n        'removeAllHandlers'\n      ]\n    };\n  \n    var proxyMethod = function(radio, system, method) {\n      return function(channelName) {\n        var messageSystem = radio._getChannel(channelName)[system];\n  \n        return messageSystem[method].apply(messageSystem, _.rest(arguments));\n      };\n    };\n  \n    return new Radio();\n  \n  })(Wreqr, _);\n  \n\n  return Backbone.Wreqr;\n\n}));\n","// MarionetteJS (Backbone.Marionette)\n// ----------------------------------\n// v2.4.7\n//\n// Copyright (c)2016 Derick Bailey, Muted Solutions, LLC.\n// Distributed under MIT license\n//\n// http://marionettejs.com\n\n(function(root, factory) {\n\n  if (typeof define === 'function' && define.amd) {\n    define(['backbone', 'underscore', 'backbone.wreqr', 'backbone.babysitter'], function(Backbone, _) {\n      return (root.Marionette = root.Mn = factory(root, Backbone, _));\n    });\n  } else if (typeof exports !== 'undefined') {\n    var Backbone = require('backbone');\n    var _ = require('underscore');\n    var Wreqr = require('backbone.wreqr');\n    var BabySitter = require('backbone.babysitter');\n    module.exports = factory(root, Backbone, _);\n  } else {\n    root.Marionette = root.Mn = factory(root, root.Backbone, root._);\n  }\n\n}(this, function(root, Backbone, _) {\n  'use strict';\n\n  var previousMarionette = root.Marionette;\n  var previousMn = root.Mn;\n\n  var Marionette = Backbone.Marionette = {};\n\n  Marionette.VERSION = '2.4.7';\n\n  Marionette.noConflict = function() {\n    root.Marionette = previousMarionette;\n    root.Mn = previousMn;\n    return this;\n  };\n\n  // Get the Deferred creator for later use\n  Marionette.Deferred = Backbone.$.Deferred;\n\n  Marionette.FEATURES = {\n  };\n  \n  Marionette.isEnabled = function(name) {\n    return !!Marionette.FEATURES[name];\n  };\n  \n  /* jshint unused: false *//* global console */\n  \n  // Helpers\n  // -------\n  \n  // Marionette.extend\n  // -----------------\n  \n  // Borrow the Backbone `extend` method so we can use it as needed\n  Marionette.extend = Backbone.Model.extend;\n  \n  // Marionette.isNodeAttached\n  // -------------------------\n  \n  // Determine if `el` is a child of the document\n  Marionette.isNodeAttached = function(el) {\n    return Backbone.$.contains(document.documentElement, el);\n  };\n  \n  // Merge `keys` from `options` onto `this`\n  Marionette.mergeOptions = function(options, keys) {\n    if (!options) { return; }\n    _.extend(this, _.pick(options, keys));\n  };\n  \n  // Marionette.getOption\n  // --------------------\n  \n  // Retrieve an object, function or other value from a target\n  // object or its `options`, with `options` taking precedence.\n  Marionette.getOption = function(target, optionName) {\n    if (!target || !optionName) { return; }\n    if (target.options && (target.options[optionName] !== undefined)) {\n      return target.options[optionName];\n    } else {\n      return target[optionName];\n    }\n  };\n  \n  // Proxy `Marionette.getOption`\n  Marionette.proxyGetOption = function(optionName) {\n    return Marionette.getOption(this, optionName);\n  };\n  \n  // Similar to `_.result`, this is a simple helper\n  // If a function is provided we call it with context\n  // otherwise just return the value. If the value is\n  // undefined return a default value\n  Marionette._getValue = function(value, context, params) {\n    if (_.isFunction(value)) {\n      value = params ? value.apply(context, params) : value.call(context);\n    }\n    return value;\n  };\n  \n  // Marionette.normalizeMethods\n  // ----------------------\n  \n  // Pass in a mapping of events => functions or function names\n  // and return a mapping of events => functions\n  Marionette.normalizeMethods = function(hash) {\n    return _.reduce(hash, function(normalizedHash, method, name) {\n      if (!_.isFunction(method)) {\n        method = this[method];\n      }\n      if (method) {\n        normalizedHash[name] = method;\n      }\n      return normalizedHash;\n    }, {}, this);\n  };\n  \n  // utility method for parsing @ui. syntax strings\n  // into associated selector\n  Marionette.normalizeUIString = function(uiString, ui) {\n    return uiString.replace(/@ui\\.[a-zA-Z-_$0-9]*/g, function(r) {\n      return ui[r.slice(4)];\n    });\n  };\n  \n  // allows for the use of the @ui. syntax within\n  // a given key for triggers and events\n  // swaps the @ui with the associated selector.\n  // Returns a new, non-mutated, parsed events hash.\n  Marionette.normalizeUIKeys = function(hash, ui) {\n    return _.reduce(hash, function(memo, val, key) {\n      var normalizedKey = Marionette.normalizeUIString(key, ui);\n      memo[normalizedKey] = val;\n      return memo;\n    }, {});\n  };\n  \n  // allows for the use of the @ui. syntax within\n  // a given value for regions\n  // swaps the @ui with the associated selector\n  Marionette.normalizeUIValues = function(hash, ui, properties) {\n    _.each(hash, function(val, key) {\n      if (_.isString(val)) {\n        hash[key] = Marionette.normalizeUIString(val, ui);\n      } else if (_.isObject(val) && _.isArray(properties)) {\n        _.extend(val, Marionette.normalizeUIValues(_.pick(val, properties), ui));\n        /* Value is an object, and we got an array of embedded property names to normalize. */\n        _.each(properties, function(property) {\n          var propertyVal = val[property];\n          if (_.isString(propertyVal)) {\n            val[property] = Marionette.normalizeUIString(propertyVal, ui);\n          }\n        });\n      }\n    });\n    return hash;\n  };\n  \n  // Mix in methods from Underscore, for iteration, and other\n  // collection related features.\n  // Borrowing this code from Backbone.Collection:\n  // http://backbonejs.org/docs/backbone.html#section-121\n  Marionette.actAsCollection = function(object, listProperty) {\n    var methods = ['forEach', 'each', 'map', 'find', 'detect', 'filter',\n      'select', 'reject', 'every', 'all', 'some', 'any', 'include',\n      'contains', 'invoke', 'toArray', 'first', 'initial', 'rest',\n      'last', 'without', 'isEmpty', 'pluck'];\n  \n    _.each(methods, function(method) {\n      object[method] = function() {\n        var list = _.values(_.result(this, listProperty));\n        var args = [list].concat(_.toArray(arguments));\n        return _[method].apply(_, args);\n      };\n    });\n  };\n  \n  var deprecate = Marionette.deprecate = function(message, test) {\n    if (_.isObject(message)) {\n      message = (\n        message.prev + ' is going to be removed in the future. ' +\n        'Please use ' + message.next + ' instead.' +\n        (message.url ? ' See: ' + message.url : '')\n      );\n    }\n  \n    if ((test === undefined || !test) && !deprecate._cache[message]) {\n      deprecate._warn('Deprecation warning: ' + message);\n      deprecate._cache[message] = true;\n    }\n  };\n  \n  deprecate._console = typeof console !== 'undefined' ? console : {};\n  deprecate._warn = function() {\n    var warn = deprecate._console.warn || deprecate._console.log || function() {};\n    return warn.apply(deprecate._console, arguments);\n  };\n  deprecate._cache = {};\n  \n  /* jshint maxstatements: 14, maxcomplexity: 7 */\n  \n  // Trigger Method\n  // --------------\n  \n  Marionette._triggerMethod = (function() {\n    // split the event name on the \":\"\n    var splitter = /(^|:)(\\w)/gi;\n  \n    // take the event section (\"section1:section2:section3\")\n    // and turn it in to uppercase name\n    function getEventName(match, prefix, eventName) {\n      return eventName.toUpperCase();\n    }\n  \n    return function(context, event, args) {\n      var noEventArg = arguments.length < 3;\n      if (noEventArg) {\n        args = event;\n        event = args[0];\n      }\n  \n      // get the method name from the event name\n      var methodName = 'on' + event.replace(splitter, getEventName);\n      var method = context[methodName];\n      var result;\n  \n      // call the onMethodName if it exists\n      if (_.isFunction(method)) {\n        // pass all args, except the event name\n        result = method.apply(context, noEventArg ? _.rest(args) : args);\n      }\n  \n      // trigger the event, if a trigger method exists\n      if (_.isFunction(context.trigger)) {\n        if (noEventArg + args.length > 1) {\n          context.trigger.apply(context, noEventArg ? args : [event].concat(_.drop(args, 0)));\n        } else {\n          context.trigger(event);\n        }\n      }\n  \n      return result;\n    };\n  })();\n  \n  // Trigger an event and/or a corresponding method name. Examples:\n  //\n  // `this.triggerMethod(\"foo\")` will trigger the \"foo\" event and\n  // call the \"onFoo\" method.\n  //\n  // `this.triggerMethod(\"foo:bar\")` will trigger the \"foo:bar\" event and\n  // call the \"onFooBar\" method.\n  Marionette.triggerMethod = function(event) {\n    return Marionette._triggerMethod(this, arguments);\n  };\n  \n  // triggerMethodOn invokes triggerMethod on a specific context\n  //\n  // e.g. `Marionette.triggerMethodOn(view, 'show')`\n  // will trigger a \"show\" event or invoke onShow the view.\n  Marionette.triggerMethodOn = function(context) {\n    var fnc = _.isFunction(context.triggerMethod) ?\n                  context.triggerMethod :\n                  Marionette.triggerMethod;\n  \n    return fnc.apply(context, _.rest(arguments));\n  };\n  \n  // DOM Refresh\n  // -----------\n  \n  // Monitor a view's state, and after it has been rendered and shown\n  // in the DOM, trigger a \"dom:refresh\" event every time it is\n  // re-rendered.\n  \n  Marionette.MonitorDOMRefresh = function(view) {\n    if (view._isDomRefreshMonitored) { return; }\n    view._isDomRefreshMonitored = true;\n  \n    // track when the view has been shown in the DOM,\n    // using a Marionette.Region (or by other means of triggering \"show\")\n    function handleShow() {\n      view._isShown = true;\n      triggerDOMRefresh();\n    }\n  \n    // track when the view has been rendered\n    function handleRender() {\n      view._isRendered = true;\n      triggerDOMRefresh();\n    }\n  \n    // Trigger the \"dom:refresh\" event and corresponding \"onDomRefresh\" method\n    function triggerDOMRefresh() {\n      if (view._isShown && view._isRendered && Marionette.isNodeAttached(view.el)) {\n        Marionette.triggerMethodOn(view, 'dom:refresh', view);\n      }\n    }\n  \n    view.on({\n      show: handleShow,\n      render: handleRender\n    });\n  };\n  \n  /* jshint maxparams: 5 */\n  \n  // Bind Entity Events & Unbind Entity Events\n  // -----------------------------------------\n  //\n  // These methods are used to bind/unbind a backbone \"entity\" (e.g. collection/model)\n  // to methods on a target object.\n  //\n  // The first parameter, `target`, must have the Backbone.Events module mixed in.\n  //\n  // The second parameter is the `entity` (Backbone.Model, Backbone.Collection or\n  // any object that has Backbone.Events mixed in) to bind the events from.\n  //\n  // The third parameter is a hash of { \"event:name\": \"eventHandler\" }\n  // configuration. Multiple handlers can be separated by a space. A\n  // function can be supplied instead of a string handler name.\n  \n  (function(Marionette) {\n    'use strict';\n  \n    // Bind the event to handlers specified as a string of\n    // handler names on the target object\n    function bindFromStrings(target, entity, evt, methods) {\n      var methodNames = methods.split(/\\s+/);\n  \n      _.each(methodNames, function(methodName) {\n  \n        var method = target[methodName];\n        if (!method) {\n          throw new Marionette.Error('Method \"' + methodName +\n            '\" was configured as an event handler, but does not exist.');\n        }\n  \n        target.listenTo(entity, evt, method);\n      });\n    }\n  \n    // Bind the event to a supplied callback function\n    function bindToFunction(target, entity, evt, method) {\n      target.listenTo(entity, evt, method);\n    }\n  \n    // Bind the event to handlers specified as a string of\n    // handler names on the target object\n    function unbindFromStrings(target, entity, evt, methods) {\n      var methodNames = methods.split(/\\s+/);\n  \n      _.each(methodNames, function(methodName) {\n        var method = target[methodName];\n        target.stopListening(entity, evt, method);\n      });\n    }\n  \n    // Bind the event to a supplied callback function\n    function unbindToFunction(target, entity, evt, method) {\n      target.stopListening(entity, evt, method);\n    }\n  \n    // generic looping function\n    function iterateEvents(target, entity, bindings, functionCallback, stringCallback) {\n      if (!entity || !bindings) { return; }\n  \n      // type-check bindings\n      if (!_.isObject(bindings)) {\n        throw new Marionette.Error({\n          message: 'Bindings must be an object or function.',\n          url: 'marionette.functions.html#marionettebindentityevents'\n        });\n      }\n  \n      // allow the bindings to be a function\n      bindings = Marionette._getValue(bindings, target);\n  \n      // iterate the bindings and bind them\n      _.each(bindings, function(methods, evt) {\n  \n        // allow for a function as the handler,\n        // or a list of event names as a string\n        if (_.isFunction(methods)) {\n          functionCallback(target, entity, evt, methods);\n        } else {\n          stringCallback(target, entity, evt, methods);\n        }\n  \n      });\n    }\n  \n    // Export Public API\n    Marionette.bindEntityEvents = function(target, entity, bindings) {\n      iterateEvents(target, entity, bindings, bindToFunction, bindFromStrings);\n    };\n  \n    Marionette.unbindEntityEvents = function(target, entity, bindings) {\n      iterateEvents(target, entity, bindings, unbindToFunction, unbindFromStrings);\n    };\n  \n    // Proxy `bindEntityEvents`\n    Marionette.proxyBindEntityEvents = function(entity, bindings) {\n      return Marionette.bindEntityEvents(this, entity, bindings);\n    };\n  \n    // Proxy `unbindEntityEvents`\n    Marionette.proxyUnbindEntityEvents = function(entity, bindings) {\n      return Marionette.unbindEntityEvents(this, entity, bindings);\n    };\n  })(Marionette);\n  \n\n  // Error\n  // -----\n  \n  var errorProps = ['description', 'fileName', 'lineNumber', 'name', 'message', 'number'];\n  \n  Marionette.Error = Marionette.extend.call(Error, {\n    urlRoot: 'http://marionettejs.com/docs/v' + Marionette.VERSION + '/',\n  \n    constructor: function(message, options) {\n      if (_.isObject(message)) {\n        options = message;\n        message = options.message;\n      } else if (!options) {\n        options = {};\n      }\n  \n      var error = Error.call(this, message);\n      _.extend(this, _.pick(error, errorProps), _.pick(options, errorProps));\n  \n      this.captureStackTrace();\n  \n      if (options.url) {\n        this.url = this.urlRoot + options.url;\n      }\n    },\n  \n    captureStackTrace: function() {\n      if (Error.captureStackTrace) {\n        Error.captureStackTrace(this, Marionette.Error);\n      }\n    },\n  \n    toString: function() {\n      return this.name + ': ' + this.message + (this.url ? ' See: ' + this.url : '');\n    }\n  });\n  \n  Marionette.Error.extend = Marionette.extend;\n  \n  // Callbacks\n  // ---------\n  \n  // A simple way of managing a collection of callbacks\n  // and executing them at a later point in time, using jQuery's\n  // `Deferred` object.\n  Marionette.Callbacks = function() {\n    this._deferred = Marionette.Deferred();\n    this._callbacks = [];\n  };\n  \n  _.extend(Marionette.Callbacks.prototype, {\n  \n    // Add a callback to be executed. Callbacks added here are\n    // guaranteed to execute, even if they are added after the\n    // `run` method is called.\n    add: function(callback, contextOverride) {\n      var promise = _.result(this._deferred, 'promise');\n  \n      this._callbacks.push({cb: callback, ctx: contextOverride});\n  \n      promise.then(function(args) {\n        if (contextOverride) { args.context = contextOverride; }\n        callback.call(args.context, args.options);\n      });\n    },\n  \n    // Run all registered callbacks with the context specified.\n    // Additional callbacks can be added after this has been run\n    // and they will still be executed.\n    run: function(options, context) {\n      this._deferred.resolve({\n        options: options,\n        context: context\n      });\n    },\n  \n    // Resets the list of callbacks to be run, allowing the same list\n    // to be run multiple times - whenever the `run` method is called.\n    reset: function() {\n      var callbacks = this._callbacks;\n      this._deferred = Marionette.Deferred();\n      this._callbacks = [];\n  \n      _.each(callbacks, function(cb) {\n        this.add(cb.cb, cb.ctx);\n      }, this);\n    }\n  });\n  \n  // Controller\n  // ----------\n  \n  // A multi-purpose object to use as a controller for\n  // modules and routers, and as a mediator for workflow\n  // and coordination of other objects, views, and more.\n  Marionette.Controller = function(options) {\n    this.options = options || {};\n  \n    if (_.isFunction(this.initialize)) {\n      this.initialize(this.options);\n    }\n  };\n  \n  Marionette.Controller.extend = Marionette.extend;\n  \n  // Controller Methods\n  // --------------\n  \n  // Ensure it can trigger events with Backbone.Events\n  _.extend(Marionette.Controller.prototype, Backbone.Events, {\n    destroy: function() {\n      Marionette._triggerMethod(this, 'before:destroy', arguments);\n      Marionette._triggerMethod(this, 'destroy', arguments);\n  \n      this.stopListening();\n      this.off();\n      return this;\n    },\n  \n    // import the `triggerMethod` to trigger events with corresponding\n    // methods if the method exists\n    triggerMethod: Marionette.triggerMethod,\n  \n    // A handy way to merge options onto the instance\n    mergeOptions: Marionette.mergeOptions,\n  \n    // Proxy `getOption` to enable getting options from this or this.options by name.\n    getOption: Marionette.proxyGetOption\n  \n  });\n  \n  // Object\n  // ------\n  \n  // A Base Class that other Classes should descend from.\n  // Object borrows many conventions and utilities from Backbone.\n  Marionette.Object = function(options) {\n    this.options = _.extend({}, _.result(this, 'options'), options);\n  \n    this.initialize.apply(this, arguments);\n  };\n  \n  Marionette.Object.extend = Marionette.extend;\n  \n  // Object Methods\n  // --------------\n  \n  // Ensure it can trigger events with Backbone.Events\n  _.extend(Marionette.Object.prototype, Backbone.Events, {\n  \n    //this is a noop method intended to be overridden by classes that extend from this base\n    initialize: function() {},\n  \n    destroy: function(options) {\n      options = options || {};\n  \n      this.triggerMethod('before:destroy', options);\n      this.triggerMethod('destroy', options);\n      this.stopListening();\n  \n      return this;\n    },\n  \n    // Import the `triggerMethod` to trigger events with corresponding\n    // methods if the method exists\n    triggerMethod: Marionette.triggerMethod,\n  \n    // A handy way to merge options onto the instance\n    mergeOptions: Marionette.mergeOptions,\n  \n    // Proxy `getOption` to enable getting options from this or this.options by name.\n    getOption: Marionette.proxyGetOption,\n  \n    // Proxy `bindEntityEvents` to enable binding view's events from another entity.\n    bindEntityEvents: Marionette.proxyBindEntityEvents,\n  \n    // Proxy `unbindEntityEvents` to enable unbinding view's events from another entity.\n    unbindEntityEvents: Marionette.proxyUnbindEntityEvents\n  });\n  \n  /* jshint maxcomplexity: 16, maxstatements: 45, maxlen: 120 */\n  \n  // Region\n  // ------\n  \n  // Manage the visual regions of your composite application. See\n  // http://lostechies.com/derickbailey/2011/12/12/composite-js-apps-regions-and-region-managers/\n  \n  Marionette.Region = Marionette.Object.extend({\n    constructor: function(options) {\n  \n      // set options temporarily so that we can get `el`.\n      // options will be overriden by Object.constructor\n      this.options = options || {};\n      this.el = this.getOption('el');\n  \n      // Handle when this.el is passed in as a $ wrapped element.\n      this.el = this.el instanceof Backbone.$ ? this.el[0] : this.el;\n  \n      if (!this.el) {\n        throw new Marionette.Error({\n          name: 'NoElError',\n          message: 'An \"el\" must be specified for a region.'\n        });\n      }\n  \n      this.$el = this.getEl(this.el);\n      Marionette.Object.call(this, options);\n    },\n  \n    // Displays a backbone view instance inside of the region.\n    // Handles calling the `render` method for you. Reads content\n    // directly from the `el` attribute. Also calls an optional\n    // `onShow` and `onDestroy` method on your view, just after showing\n    // or just before destroying the view, respectively.\n    // The `preventDestroy` option can be used to prevent a view from\n    // the old view being destroyed on show.\n    // The `forceShow` option can be used to force a view to be\n    // re-rendered if it's already shown in the region.\n    show: function(view, options) {\n      if (!this._ensureElement()) {\n        return;\n      }\n  \n      this._ensureViewIsIntact(view);\n      Marionette.MonitorDOMRefresh(view);\n  \n      var showOptions     = options || {};\n      var isDifferentView = view !== this.currentView;\n      var preventDestroy  = !!showOptions.preventDestroy;\n      var forceShow       = !!showOptions.forceShow;\n  \n      // We are only changing the view if there is a current view to change to begin with\n      var isChangingView = !!this.currentView;\n  \n      // Only destroy the current view if we don't want to `preventDestroy` and if\n      // the view given in the first argument is different than `currentView`\n      var _shouldDestroyView = isDifferentView && !preventDestroy;\n  \n      // Only show the view given in the first argument if it is different than\n      // the current view or if we want to re-show the view. Note that if\n      // `_shouldDestroyView` is true, then `_shouldShowView` is also necessarily true.\n      var _shouldShowView = isDifferentView || forceShow;\n  \n      if (isChangingView) {\n        this.triggerMethod('before:swapOut', this.currentView, this, options);\n      }\n  \n      if (this.currentView && isDifferentView) {\n        delete this.currentView._parent;\n      }\n  \n      if (_shouldDestroyView) {\n        this.empty();\n  \n      // A `destroy` event is attached to the clean up manually removed views.\n      // We need to detach this event when a new view is going to be shown as it\n      // is no longer relevant.\n      } else if (isChangingView && _shouldShowView) {\n        this.currentView.off('destroy', this.empty, this);\n      }\n  \n      if (_shouldShowView) {\n  \n        // We need to listen for if a view is destroyed\n        // in a way other than through the region.\n        // If this happens we need to remove the reference\n        // to the currentView since once a view has been destroyed\n        // we can not reuse it.\n        view.once('destroy', this.empty, this);\n  \n        // make this region the view's parent,\n        // It's important that this parent binding happens before rendering\n        // so that any events the child may trigger during render can also be\n        // triggered on the child's ancestor views\n        view._parent = this;\n        this._renderView(view);\n  \n        if (isChangingView) {\n          this.triggerMethod('before:swap', view, this, options);\n        }\n  \n        this.triggerMethod('before:show', view, this, options);\n        Marionette.triggerMethodOn(view, 'before:show', view, this, options);\n  \n        if (isChangingView) {\n          this.triggerMethod('swapOut', this.currentView, this, options);\n        }\n  \n        // An array of views that we're about to display\n        var attachedRegion = Marionette.isNodeAttached(this.el);\n  \n        // The views that we're about to attach to the document\n        // It's important that we prevent _getNestedViews from being executed unnecessarily\n        // as it's a potentially-slow method\n        var displayedViews = [];\n  \n        var attachOptions = _.extend({\n          triggerBeforeAttach: this.triggerBeforeAttach,\n          triggerAttach: this.triggerAttach\n        }, showOptions);\n  \n        if (attachedRegion && attachOptions.triggerBeforeAttach) {\n          displayedViews = this._displayedViews(view);\n          this._triggerAttach(displayedViews, 'before:');\n        }\n  \n        this.attachHtml(view);\n        this.currentView = view;\n  \n        if (attachedRegion && attachOptions.triggerAttach) {\n          displayedViews = this._displayedViews(view);\n          this._triggerAttach(displayedViews);\n        }\n  \n        if (isChangingView) {\n          this.triggerMethod('swap', view, this, options);\n        }\n  \n        this.triggerMethod('show', view, this, options);\n        Marionette.triggerMethodOn(view, 'show', view, this, options);\n  \n        return this;\n      }\n  \n      return this;\n    },\n  \n    triggerBeforeAttach: true,\n    triggerAttach: true,\n  \n    _triggerAttach: function(views, prefix) {\n      var eventName = (prefix || '') + 'attach';\n      _.each(views, function(view) {\n        Marionette.triggerMethodOn(view, eventName, view, this);\n      }, this);\n    },\n  \n    _displayedViews: function(view) {\n      return _.union([view], _.result(view, '_getNestedViews') || []);\n    },\n  \n    _renderView: function(view) {\n      if (!view.supportsRenderLifecycle) {\n        Marionette.triggerMethodOn(view, 'before:render', view);\n      }\n      view.render();\n      if (!view.supportsRenderLifecycle) {\n        Marionette.triggerMethodOn(view, 'render', view);\n      }\n    },\n  \n    _ensureElement: function() {\n      if (!_.isObject(this.el)) {\n        this.$el = this.getEl(this.el);\n        this.el = this.$el[0];\n      }\n  \n      if (!this.$el || this.$el.length === 0) {\n        if (this.getOption('allowMissingEl')) {\n          return false;\n        } else {\n          throw new Marionette.Error('An \"el\" ' + this.$el.selector + ' must exist in DOM');\n        }\n      }\n      return true;\n    },\n  \n    _ensureViewIsIntact: function(view) {\n      if (!view) {\n        throw new Marionette.Error({\n          name: 'ViewNotValid',\n          message: 'The view passed is undefined and therefore invalid. You must pass a view instance to show.'\n        });\n      }\n  \n      if (view.isDestroyed) {\n        throw new Marionette.Error({\n          name: 'ViewDestroyedError',\n          message: 'View (cid: \"' + view.cid + '\") has already been destroyed and cannot be used.'\n        });\n      }\n    },\n  \n    // Override this method to change how the region finds the DOM\n    // element that it manages. Return a jQuery selector object scoped\n    // to a provided parent el or the document if none exists.\n    getEl: function(el) {\n      return Backbone.$(el, Marionette._getValue(this.options.parentEl, this));\n    },\n  \n    // Override this method to change how the new view is\n    // appended to the `$el` that the region is managing\n    attachHtml: function(view) {\n      this.$el.contents().detach();\n  \n      this.el.appendChild(view.el);\n    },\n  \n    // Destroy the current view, if there is one. If there is no\n    // current view, it does nothing and returns immediately.\n    empty: function(options) {\n      var view = this.currentView;\n  \n      var emptyOptions = options || {};\n      var preventDestroy  = !!emptyOptions.preventDestroy;\n      // If there is no view in the region\n      // we should not remove anything\n      if (!view) { return this; }\n  \n      view.off('destroy', this.empty, this);\n      this.triggerMethod('before:empty', view);\n      if (!preventDestroy) {\n        this._destroyView();\n      }\n      this.triggerMethod('empty', view);\n  \n      // Remove region pointer to the currentView\n      delete this.currentView;\n  \n      if (preventDestroy) {\n        this.$el.contents().detach();\n      }\n  \n      return this;\n    },\n  \n    // call 'destroy' or 'remove', depending on which is found\n    // on the view (if showing a raw Backbone view or a Marionette View)\n    _destroyView: function() {\n      var view = this.currentView;\n      if (view.isDestroyed) { return; }\n  \n      if (!view.supportsDestroyLifecycle) {\n        Marionette.triggerMethodOn(view, 'before:destroy', view);\n      }\n      if (view.destroy) {\n        view.destroy();\n      } else {\n        view.remove();\n  \n        // appending isDestroyed to raw Backbone View allows regions\n        // to throw a ViewDestroyedError for this view\n        view.isDestroyed = true;\n      }\n      if (!view.supportsDestroyLifecycle) {\n        Marionette.triggerMethodOn(view, 'destroy', view);\n      }\n    },\n  \n    // Attach an existing view to the region. This\n    // will not call `render` or `onShow` for the new view,\n    // and will not replace the current HTML for the `el`\n    // of the region.\n    attachView: function(view) {\n      if (this.currentView) {\n        delete this.currentView._parent;\n      }\n      view._parent = this;\n      this.currentView = view;\n      return this;\n    },\n  \n    // Checks whether a view is currently present within\n    // the region. Returns `true` if there is and `false` if\n    // no view is present.\n    hasView: function() {\n      return !!this.currentView;\n    },\n  \n    // Reset the region by destroying any existing view and\n    // clearing out the cached `$el`. The next time a view\n    // is shown via this region, the region will re-query the\n    // DOM for the region's `el`.\n    reset: function() {\n      this.empty();\n  \n      if (this.$el) {\n        this.el = this.$el.selector;\n      }\n  \n      delete this.$el;\n      return this;\n    }\n  \n  },\n  \n  // Static Methods\n  {\n  \n    // Build an instance of a region by passing in a configuration object\n    // and a default region class to use if none is specified in the config.\n    //\n    // The config object should either be a string as a jQuery DOM selector,\n    // a Region class directly, or an object literal that specifies a selector,\n    // a custom regionClass, and any options to be supplied to the region:\n    //\n    // ```js\n    // {\n    //   selector: \"#foo\",\n    //   regionClass: MyCustomRegion,\n    //   allowMissingEl: false\n    // }\n    // ```\n    //\n    buildRegion: function(regionConfig, DefaultRegionClass) {\n      if (_.isString(regionConfig)) {\n        return this._buildRegionFromSelector(regionConfig, DefaultRegionClass);\n      }\n  \n      if (regionConfig.selector || regionConfig.el || regionConfig.regionClass) {\n        return this._buildRegionFromObject(regionConfig, DefaultRegionClass);\n      }\n  \n      if (_.isFunction(regionConfig)) {\n        return this._buildRegionFromRegionClass(regionConfig);\n      }\n  \n      throw new Marionette.Error({\n        message: 'Improper region configuration type.',\n        url: 'marionette.region.html#region-configuration-types'\n      });\n    },\n  \n    // Build the region from a string selector like '#foo-region'\n    _buildRegionFromSelector: function(selector, DefaultRegionClass) {\n      return new DefaultRegionClass({el: selector});\n    },\n  \n    // Build the region from a configuration object\n    // ```js\n    // { selector: '#foo', regionClass: FooRegion, allowMissingEl: false }\n    // ```\n    _buildRegionFromObject: function(regionConfig, DefaultRegionClass) {\n      var RegionClass = regionConfig.regionClass || DefaultRegionClass;\n      var options = _.omit(regionConfig, 'selector', 'regionClass');\n  \n      if (regionConfig.selector && !options.el) {\n        options.el = regionConfig.selector;\n      }\n  \n      return new RegionClass(options);\n    },\n  \n    // Build the region directly from a given `RegionClass`\n    _buildRegionFromRegionClass: function(RegionClass) {\n      return new RegionClass();\n    }\n  });\n  \n  // Region Manager\n  // --------------\n  \n  // Manage one or more related `Marionette.Region` objects.\n  Marionette.RegionManager = Marionette.Controller.extend({\n    constructor: function(options) {\n      this._regions = {};\n      this.length = 0;\n  \n      Marionette.Controller.call(this, options);\n  \n      this.addRegions(this.getOption('regions'));\n    },\n  \n    // Add multiple regions using an object literal or a\n    // function that returns an object literal, where\n    // each key becomes the region name, and each value is\n    // the region definition.\n    addRegions: function(regionDefinitions, defaults) {\n      regionDefinitions = Marionette._getValue(regionDefinitions, this, arguments);\n  \n      return _.reduce(regionDefinitions, function(regions, definition, name) {\n        if (_.isString(definition)) {\n          definition = {selector: definition};\n        }\n        if (definition.selector) {\n          definition = _.defaults({}, definition, defaults);\n        }\n  \n        regions[name] = this.addRegion(name, definition);\n        return regions;\n      }, {}, this);\n    },\n  \n    // Add an individual region to the region manager,\n    // and return the region instance\n    addRegion: function(name, definition) {\n      var region;\n  \n      if (definition instanceof Marionette.Region) {\n        region = definition;\n      } else {\n        region = Marionette.Region.buildRegion(definition, Marionette.Region);\n      }\n  \n      this.triggerMethod('before:add:region', name, region);\n  \n      region._parent = this;\n      this._store(name, region);\n  \n      this.triggerMethod('add:region', name, region);\n      return region;\n    },\n  \n    // Get a region by name\n    get: function(name) {\n      return this._regions[name];\n    },\n  \n    // Gets all the regions contained within\n    // the `regionManager` instance.\n    getRegions: function() {\n      return _.clone(this._regions);\n    },\n  \n    // Remove a region by name\n    removeRegion: function(name) {\n      var region = this._regions[name];\n      this._remove(name, region);\n  \n      return region;\n    },\n  \n    // Empty all regions in the region manager, and\n    // remove them\n    removeRegions: function() {\n      var regions = this.getRegions();\n      _.each(this._regions, function(region, name) {\n        this._remove(name, region);\n      }, this);\n  \n      return regions;\n    },\n  \n    // Empty all regions in the region manager, but\n    // leave them attached\n    emptyRegions: function() {\n      var regions = this.getRegions();\n      _.invoke(regions, 'empty');\n      return regions;\n    },\n  \n    // Destroy all regions and shut down the region\n    // manager entirely\n    destroy: function() {\n      this.removeRegions();\n      return Marionette.Controller.prototype.destroy.apply(this, arguments);\n    },\n  \n    // internal method to store regions\n    _store: function(name, region) {\n      if (!this._regions[name]) {\n        this.length++;\n      }\n  \n      this._regions[name] = region;\n    },\n  \n    // internal method to remove a region\n    _remove: function(name, region) {\n      this.triggerMethod('before:remove:region', name, region);\n      region.empty();\n      region.stopListening();\n  \n      delete region._parent;\n      delete this._regions[name];\n      this.length--;\n      this.triggerMethod('remove:region', name, region);\n    }\n  });\n  \n  Marionette.actAsCollection(Marionette.RegionManager.prototype, '_regions');\n  \n\n  // Template Cache\n  // --------------\n  \n  // Manage templates stored in `<script>` blocks,\n  // caching them for faster access.\n  Marionette.TemplateCache = function(templateId) {\n    this.templateId = templateId;\n  };\n  \n  // TemplateCache object-level methods. Manage the template\n  // caches from these method calls instead of creating\n  // your own TemplateCache instances\n  _.extend(Marionette.TemplateCache, {\n    templateCaches: {},\n  \n    // Get the specified template by id. Either\n    // retrieves the cached version, or loads it\n    // from the DOM.\n    get: function(templateId, options) {\n      var cachedTemplate = this.templateCaches[templateId];\n  \n      if (!cachedTemplate) {\n        cachedTemplate = new Marionette.TemplateCache(templateId);\n        this.templateCaches[templateId] = cachedTemplate;\n      }\n  \n      return cachedTemplate.load(options);\n    },\n  \n    // Clear templates from the cache. If no arguments\n    // are specified, clears all templates:\n    // `clear()`\n    //\n    // If arguments are specified, clears each of the\n    // specified templates from the cache:\n    // `clear(\"#t1\", \"#t2\", \"...\")`\n    clear: function() {\n      var i;\n      var args = _.toArray(arguments);\n      var length = args.length;\n  \n      if (length > 0) {\n        for (i = 0; i < length; i++) {\n          delete this.templateCaches[args[i]];\n        }\n      } else {\n        this.templateCaches = {};\n      }\n    }\n  });\n  \n  // TemplateCache instance methods, allowing each\n  // template cache object to manage its own state\n  // and know whether or not it has been loaded\n  _.extend(Marionette.TemplateCache.prototype, {\n  \n    // Internal method to load the template\n    load: function(options) {\n      // Guard clause to prevent loading this template more than once\n      if (this.compiledTemplate) {\n        return this.compiledTemplate;\n      }\n  \n      // Load the template and compile it\n      var template = this.loadTemplate(this.templateId, options);\n      this.compiledTemplate = this.compileTemplate(template, options);\n  \n      return this.compiledTemplate;\n    },\n  \n    // Load a template from the DOM, by default. Override\n    // this method to provide your own template retrieval\n    // For asynchronous loading with AMD/RequireJS, consider\n    // using a template-loader plugin as described here:\n    // https://github.com/marionettejs/backbone.marionette/wiki/Using-marionette-with-requirejs\n    loadTemplate: function(templateId, options) {\n      var $template = Backbone.$(templateId);\n  \n      if (!$template.length) {\n        throw new Marionette.Error({\n          name: 'NoTemplateError',\n          message: 'Could not find template: \"' + templateId + '\"'\n        });\n      }\n      return $template.html();\n    },\n  \n    // Pre-compile the template before caching it. Override\n    // this method if you do not need to pre-compile a template\n    // (JST / RequireJS for example) or if you want to change\n    // the template engine used (Handebars, etc).\n    compileTemplate: function(rawTemplate, options) {\n      return _.template(rawTemplate, options);\n    }\n  });\n  \n  // Renderer\n  // --------\n  \n  // Render a template with data by passing in the template\n  // selector and the data to render.\n  Marionette.Renderer = {\n  \n    // Render a template with data. The `template` parameter is\n    // passed to the `TemplateCache` object to retrieve the\n    // template function. Override this method to provide your own\n    // custom rendering and template handling for all of Marionette.\n    render: function(template, data) {\n      if (!template) {\n        throw new Marionette.Error({\n          name: 'TemplateNotFoundError',\n          message: 'Cannot render the template since its false, null or undefined.'\n        });\n      }\n  \n      var templateFunc = _.isFunction(template) ? template : Marionette.TemplateCache.get(template);\n  \n      return templateFunc(data);\n    }\n  };\n  \n\n  /* jshint maxlen: 114, nonew: false */\n  // View\n  // ----\n  \n  // The core view class that other Marionette views extend from.\n  Marionette.View = Backbone.View.extend({\n    isDestroyed: false,\n    supportsRenderLifecycle: true,\n    supportsDestroyLifecycle: true,\n  \n    constructor: function(options) {\n      this.render = _.bind(this.render, this);\n  \n      options = Marionette._getValue(options, this);\n  \n      // this exposes view options to the view initializer\n      // this is a backfill since backbone removed the assignment\n      // of this.options\n      // at some point however this may be removed\n      this.options = _.extend({}, _.result(this, 'options'), options);\n  \n      this._behaviors = Marionette.Behaviors(this);\n  \n      Backbone.View.call(this, this.options);\n  \n      Marionette.MonitorDOMRefresh(this);\n    },\n  \n    // Get the template for this view\n    // instance. You can set a `template` attribute in the view\n    // definition or pass a `template: \"whatever\"` parameter in\n    // to the constructor options.\n    getTemplate: function() {\n      return this.getOption('template');\n    },\n  \n    // Serialize a model by returning its attributes. Clones\n    // the attributes to allow modification.\n    serializeModel: function(model) {\n      return model.toJSON.apply(model, _.rest(arguments));\n    },\n  \n    // Mix in template helper methods. Looks for a\n    // `templateHelpers` attribute, which can either be an\n    // object literal, or a function that returns an object\n    // literal. All methods and attributes from this object\n    // are copies to the object passed in.\n    mixinTemplateHelpers: function(target) {\n      target = target || {};\n      var templateHelpers = this.getOption('templateHelpers');\n      templateHelpers = Marionette._getValue(templateHelpers, this);\n      return _.extend(target, templateHelpers);\n    },\n  \n    // normalize the keys of passed hash with the views `ui` selectors.\n    // `{\"@ui.foo\": \"bar\"}`\n    normalizeUIKeys: function(hash) {\n      var uiBindings = _.result(this, '_uiBindings');\n      return Marionette.normalizeUIKeys(hash, uiBindings || _.result(this, 'ui'));\n    },\n  \n    // normalize the values of passed hash with the views `ui` selectors.\n    // `{foo: \"@ui.bar\"}`\n    normalizeUIValues: function(hash, properties) {\n      var ui = _.result(this, 'ui');\n      var uiBindings = _.result(this, '_uiBindings');\n      return Marionette.normalizeUIValues(hash, uiBindings || ui, properties);\n    },\n  \n    // Configure `triggers` to forward DOM events to view\n    // events. `triggers: {\"click .foo\": \"do:foo\"}`\n    configureTriggers: function() {\n      if (!this.triggers) { return; }\n  \n      // Allow `triggers` to be configured as a function\n      var triggers = this.normalizeUIKeys(_.result(this, 'triggers'));\n  \n      // Configure the triggers, prevent default\n      // action and stop propagation of DOM events\n      return _.reduce(triggers, function(events, value, key) {\n        events[key] = this._buildViewTrigger(value);\n        return events;\n      }, {}, this);\n    },\n  \n    // Overriding Backbone.View's delegateEvents to handle\n    // the `triggers`, `modelEvents`, and `collectionEvents` configuration\n    delegateEvents: function(events) {\n      this._delegateDOMEvents(events);\n      this.bindEntityEvents(this.model, this.getOption('modelEvents'));\n      this.bindEntityEvents(this.collection, this.getOption('collectionEvents'));\n  \n      _.each(this._behaviors, function(behavior) {\n        behavior.bindEntityEvents(this.model, behavior.getOption('modelEvents'));\n        behavior.bindEntityEvents(this.collection, behavior.getOption('collectionEvents'));\n      }, this);\n  \n      return this;\n    },\n  \n    // internal method to delegate DOM events and triggers\n    _delegateDOMEvents: function(eventsArg) {\n      var events = Marionette._getValue(eventsArg || this.events, this);\n  \n      // normalize ui keys\n      events = this.normalizeUIKeys(events);\n      if (_.isUndefined(eventsArg)) {this.events = events;}\n  \n      var combinedEvents = {};\n  \n      // look up if this view has behavior events\n      var behaviorEvents = _.result(this, 'behaviorEvents') || {};\n      var triggers = this.configureTriggers();\n      var behaviorTriggers = _.result(this, 'behaviorTriggers') || {};\n  \n      // behavior events will be overriden by view events and or triggers\n      _.extend(combinedEvents, behaviorEvents, events, triggers, behaviorTriggers);\n  \n      Backbone.View.prototype.delegateEvents.call(this, combinedEvents);\n    },\n  \n    // Overriding Backbone.View's undelegateEvents to handle unbinding\n    // the `triggers`, `modelEvents`, and `collectionEvents` config\n    undelegateEvents: function() {\n      Backbone.View.prototype.undelegateEvents.apply(this, arguments);\n  \n      this.unbindEntityEvents(this.model, this.getOption('modelEvents'));\n      this.unbindEntityEvents(this.collection, this.getOption('collectionEvents'));\n  \n      _.each(this._behaviors, function(behavior) {\n        behavior.unbindEntityEvents(this.model, behavior.getOption('modelEvents'));\n        behavior.unbindEntityEvents(this.collection, behavior.getOption('collectionEvents'));\n      }, this);\n  \n      return this;\n    },\n  \n    // Internal helper method to verify whether the view hasn't been destroyed\n    _ensureViewIsIntact: function() {\n      if (this.isDestroyed) {\n        throw new Marionette.Error({\n          name: 'ViewDestroyedError',\n          message: 'View (cid: \"' + this.cid + '\") has already been destroyed and cannot be used.'\n        });\n      }\n    },\n  \n    // Default `destroy` implementation, for removing a view from the\n    // DOM and unbinding it. Regions will call this method\n    // for you. You can specify an `onDestroy` method in your view to\n    // add custom code that is called after the view is destroyed.\n    destroy: function() {\n      if (this.isDestroyed) { return this; }\n  \n      var args = _.toArray(arguments);\n  \n      this.triggerMethod.apply(this, ['before:destroy'].concat(args));\n  \n      // mark as destroyed before doing the actual destroy, to\n      // prevent infinite loops within \"destroy\" event handlers\n      // that are trying to destroy other views\n      this.isDestroyed = true;\n      this.triggerMethod.apply(this, ['destroy'].concat(args));\n  \n      // unbind UI elements\n      this.unbindUIElements();\n  \n      this.isRendered = false;\n  \n      // remove the view from the DOM\n      this.remove();\n  \n      // Call destroy on each behavior after\n      // destroying the view.\n      // This unbinds event listeners\n      // that behaviors have registered for.\n      _.invoke(this._behaviors, 'destroy', args);\n  \n      return this;\n    },\n  \n    bindUIElements: function() {\n      this._bindUIElements();\n      _.invoke(this._behaviors, this._bindUIElements);\n    },\n  \n    // This method binds the elements specified in the \"ui\" hash inside the view's code with\n    // the associated jQuery selectors.\n    _bindUIElements: function() {\n      if (!this.ui) { return; }\n  \n      // store the ui hash in _uiBindings so they can be reset later\n      // and so re-rendering the view will be able to find the bindings\n      if (!this._uiBindings) {\n        this._uiBindings = this.ui;\n      }\n  \n      // get the bindings result, as a function or otherwise\n      var bindings = _.result(this, '_uiBindings');\n  \n      // empty the ui so we don't have anything to start with\n      this.ui = {};\n  \n      // bind each of the selectors\n      _.each(bindings, function(selector, key) {\n        this.ui[key] = this.$(selector);\n      }, this);\n    },\n  \n    // This method unbinds the elements specified in the \"ui\" hash\n    unbindUIElements: function() {\n      this._unbindUIElements();\n      _.invoke(this._behaviors, this._unbindUIElements);\n    },\n  \n    _unbindUIElements: function() {\n      if (!this.ui || !this._uiBindings) { return; }\n  \n      // delete all of the existing ui bindings\n      _.each(this.ui, function($el, name) {\n        delete this.ui[name];\n      }, this);\n  \n      // reset the ui element to the original bindings configuration\n      this.ui = this._uiBindings;\n      delete this._uiBindings;\n    },\n  \n    // Internal method to create an event handler for a given `triggerDef` like\n    // 'click:foo'\n    _buildViewTrigger: function(triggerDef) {\n  \n      var options = _.defaults({}, triggerDef, {\n        preventDefault: true,\n        stopPropagation: true\n      });\n  \n      var eventName = _.isObject(triggerDef) ? options.event : triggerDef;\n  \n      return function(e) {\n        if (e) {\n          if (e.preventDefault && options.preventDefault) {\n            e.preventDefault();\n          }\n  \n          if (e.stopPropagation && options.stopPropagation) {\n            e.stopPropagation();\n          }\n        }\n  \n        var args = {\n          view: this,\n          model: this.model,\n          collection: this.collection\n        };\n  \n        this.triggerMethod(eventName, args);\n      };\n    },\n  \n    setElement: function() {\n      var ret = Backbone.View.prototype.setElement.apply(this, arguments);\n  \n      // proxy behavior $el to the view's $el.\n      // This is needed because a view's $el proxy\n      // is not set until after setElement is called.\n      _.invoke(this._behaviors, 'proxyViewProperties', this);\n  \n      return ret;\n    },\n  \n    // import the `triggerMethod` to trigger events with corresponding\n    // methods if the method exists\n    triggerMethod: function() {\n      var ret = Marionette._triggerMethod(this, arguments);\n  \n      this._triggerEventOnBehaviors(arguments);\n      this._triggerEventOnParentLayout(arguments[0], _.rest(arguments));\n  \n      return ret;\n    },\n  \n    _triggerEventOnBehaviors: function(args) {\n      var triggerMethod = Marionette._triggerMethod;\n      var behaviors = this._behaviors;\n      // Use good ol' for as this is a very hot function\n      for (var i = 0, length = behaviors && behaviors.length; i < length; i++) {\n        triggerMethod(behaviors[i], args);\n      }\n    },\n  \n    _triggerEventOnParentLayout: function(eventName, args) {\n      var layoutView = this._parentLayoutView();\n      if (!layoutView) {\n        return;\n      }\n  \n      // invoke triggerMethod on parent view\n      var eventPrefix = Marionette.getOption(layoutView, 'childViewEventPrefix');\n      var prefixedEventName = eventPrefix + ':' + eventName;\n      var callArgs = [this].concat(args);\n  \n      Marionette._triggerMethod(layoutView, prefixedEventName, callArgs);\n  \n      // call the parent view's childEvents handler\n      var childEvents = Marionette.getOption(layoutView, 'childEvents');\n  \n      // since childEvents can be an object or a function use Marionette._getValue\n      // to handle the abstaction for us.\n      childEvents = Marionette._getValue(childEvents, layoutView);\n      var normalizedChildEvents = layoutView.normalizeMethods(childEvents);\n  \n      if (normalizedChildEvents && _.isFunction(normalizedChildEvents[eventName])) {\n        normalizedChildEvents[eventName].apply(layoutView, callArgs);\n      }\n    },\n  \n    // This method returns any views that are immediate\n    // children of this view\n    _getImmediateChildren: function() {\n      return [];\n    },\n  \n    // Returns an array of every nested view within this view\n    _getNestedViews: function() {\n      var children = this._getImmediateChildren();\n  \n      if (!children.length) { return children; }\n  \n      return _.reduce(children, function(memo, view) {\n        if (!view._getNestedViews) { return memo; }\n        return memo.concat(view._getNestedViews());\n      }, children);\n    },\n  \n    // Walk the _parent tree until we find a layout view (if one exists).\n    // Returns the parent layout view hierarchically closest to this view.\n    _parentLayoutView: function() {\n      var parent  = this._parent;\n  \n      while (parent) {\n        if (parent instanceof Marionette.LayoutView) {\n          return parent;\n        }\n        parent = parent._parent;\n      }\n    },\n  \n    // Imports the \"normalizeMethods\" to transform hashes of\n    // events=>function references/names to a hash of events=>function references\n    normalizeMethods: Marionette.normalizeMethods,\n  \n    // A handy way to merge passed-in options onto the instance\n    mergeOptions: Marionette.mergeOptions,\n  \n    // Proxy `getOption` to enable getting options from this or this.options by name.\n    getOption: Marionette.proxyGetOption,\n  \n    // Proxy `bindEntityEvents` to enable binding view's events from another entity.\n    bindEntityEvents: Marionette.proxyBindEntityEvents,\n  \n    // Proxy `unbindEntityEvents` to enable unbinding view's events from another entity.\n    unbindEntityEvents: Marionette.proxyUnbindEntityEvents\n  });\n  \n  // Item View\n  // ---------\n  \n  // A single item view implementation that contains code for rendering\n  // with underscore.js templates, serializing the view's model or collection,\n  // and calling several methods on extended views, such as `onRender`.\n  Marionette.ItemView = Marionette.View.extend({\n  \n    // Setting up the inheritance chain which allows changes to\n    // Marionette.View.prototype.constructor which allows overriding\n    constructor: function() {\n      Marionette.View.apply(this, arguments);\n    },\n  \n    // Serialize the model or collection for the view. If a model is\n    // found, the view's `serializeModel` is called. If a collection is found,\n    // each model in the collection is serialized by calling\n    // the view's `serializeCollection` and put into an `items` array in\n    // the resulting data. If both are found, defaults to the model.\n    // You can override the `serializeData` method in your own view definition,\n    // to provide custom serialization for your view's data.\n    serializeData: function() {\n      if (!this.model && !this.collection) {\n        return {};\n      }\n  \n      var args = [this.model || this.collection];\n      if (arguments.length) {\n        args.push.apply(args, arguments);\n      }\n  \n      if (this.model) {\n        return this.serializeModel.apply(this, args);\n      } else {\n        return {\n          items: this.serializeCollection.apply(this, args)\n        };\n      }\n    },\n  \n    // Serialize a collection by serializing each of its models.\n    serializeCollection: function(collection) {\n      return collection.toJSON.apply(collection, _.rest(arguments));\n    },\n  \n    // Render the view, defaulting to underscore.js templates.\n    // You can override this in your view definition to provide\n    // a very specific rendering for your view. In general, though,\n    // you should override the `Marionette.Renderer` object to\n    // change how Marionette renders views.\n    render: function() {\n      this._ensureViewIsIntact();\n  \n      this.triggerMethod('before:render', this);\n  \n      this._renderTemplate();\n      this.isRendered = true;\n      this.bindUIElements();\n  \n      this.triggerMethod('render', this);\n  \n      return this;\n    },\n  \n    // Internal method to render the template with the serialized data\n    // and template helpers via the `Marionette.Renderer` object.\n    // Throws an `UndefinedTemplateError` error if the template is\n    // any falsely value but literal `false`.\n    _renderTemplate: function() {\n      var template = this.getTemplate();\n  \n      // Allow template-less item views\n      if (template === false) {\n        return;\n      }\n  \n      if (!template) {\n        throw new Marionette.Error({\n          name: 'UndefinedTemplateError',\n          message: 'Cannot render the template since it is null or undefined.'\n        });\n      }\n  \n      // Add in entity data and template helpers\n      var data = this.mixinTemplateHelpers(this.serializeData());\n  \n      // Render and add to el\n      var html = Marionette.Renderer.render(template, data, this);\n      this.attachElContent(html);\n  \n      return this;\n    },\n  \n    // Attaches the content of a given view.\n    // This method can be overridden to optimize rendering,\n    // or to render in a non standard way.\n    //\n    // For example, using `innerHTML` instead of `$el.html`\n    //\n    // ```js\n    // attachElContent: function(html) {\n    //   this.el.innerHTML = html;\n    //   return this;\n    // }\n    // ```\n    attachElContent: function(html) {\n      this.$el.html(html);\n  \n      return this;\n    }\n  });\n  \n  /* jshint maxstatements: 20, maxcomplexity: 7 */\n  \n  // Collection View\n  // ---------------\n  \n  // A view that iterates over a Backbone.Collection\n  // and renders an individual child view for each model.\n  Marionette.CollectionView = Marionette.View.extend({\n  \n    // used as the prefix for child view events\n    // that are forwarded through the collectionview\n    childViewEventPrefix: 'childview',\n  \n    // flag for maintaining the sorted order of the collection\n    sort: true,\n  \n    // constructor\n    // option to pass `{sort: false}` to prevent the `CollectionView` from\n    // maintaining the sorted order of the collection.\n    // This will fallback onto appending childView's to the end.\n    //\n    // option to pass `{comparator: compFunction()}` to allow the `CollectionView`\n    // to use a custom sort order for the collection.\n    constructor: function(options) {\n      this.once('render', this._initialEvents);\n      this._initChildViewStorage();\n  \n      Marionette.View.apply(this, arguments);\n  \n      this.on({\n        'before:show':   this._onBeforeShowCalled,\n        'show':          this._onShowCalled,\n        'before:attach': this._onBeforeAttachCalled,\n        'attach':        this._onAttachCalled\n      });\n      this.initRenderBuffer();\n    },\n  \n    // Instead of inserting elements one by one into the page,\n    // it's much more performant to insert elements into a document\n    // fragment and then insert that document fragment into the page\n    initRenderBuffer: function() {\n      this._bufferedChildren = [];\n    },\n  \n    startBuffering: function() {\n      this.initRenderBuffer();\n      this.isBuffering = true;\n    },\n  \n    endBuffering: function() {\n      // Only trigger attach if already shown and attached, otherwise Region#show() handles this.\n      var canTriggerAttach = this._isShown && Marionette.isNodeAttached(this.el);\n      var nestedViews;\n  \n      this.isBuffering = false;\n  \n      if (this._isShown) {\n        this._triggerMethodMany(this._bufferedChildren, this, 'before:show');\n      }\n      if (canTriggerAttach && this._triggerBeforeAttach) {\n        nestedViews = this._getNestedViews();\n        this._triggerMethodMany(nestedViews, this, 'before:attach');\n      }\n  \n      this.attachBuffer(this, this._createBuffer());\n  \n      if (canTriggerAttach && this._triggerAttach) {\n        nestedViews = this._getNestedViews();\n        this._triggerMethodMany(nestedViews, this, 'attach');\n      }\n      if (this._isShown) {\n        this._triggerMethodMany(this._bufferedChildren, this, 'show');\n      }\n      this.initRenderBuffer();\n    },\n  \n    _triggerMethodMany: function(targets, source, eventName) {\n      var args = _.drop(arguments, 3);\n  \n      _.each(targets, function(target) {\n        Marionette.triggerMethodOn.apply(target, [target, eventName, target, source].concat(args));\n      });\n    },\n  \n    // Configured the initial events that the collection view\n    // binds to.\n    _initialEvents: function() {\n      if (this.collection) {\n        this.listenTo(this.collection, 'add', this._onCollectionAdd);\n        this.listenTo(this.collection, 'remove', this._onCollectionRemove);\n        this.listenTo(this.collection, 'reset', this.render);\n  \n        if (this.getOption('sort')) {\n          this.listenTo(this.collection, 'sort', this._sortViews);\n        }\n      }\n    },\n  \n    // Handle a child added to the collection\n    _onCollectionAdd: function(child, collection, opts) {\n      // `index` is present when adding with `at` since BB 1.2; indexOf fallback for < 1.2\n      var index = opts.at !== undefined && (opts.index || collection.indexOf(child));\n  \n      // When filtered or when there is no initial index, calculate index.\n      if (this.getOption('filter') || index === false) {\n        index = _.indexOf(this._filteredSortedModels(index), child);\n      }\n  \n      if (this._shouldAddChild(child, index)) {\n        this.destroyEmptyView();\n        var ChildView = this.getChildView(child);\n        this.addChild(child, ChildView, index);\n      }\n    },\n  \n    // get the child view by model it holds, and remove it\n    _onCollectionRemove: function(model) {\n      var view = this.children.findByModel(model);\n      this.removeChildView(view);\n      this.checkEmpty();\n    },\n  \n    _onBeforeShowCalled: function() {\n      // Reset attach event flags at the top of the Region#show() event lifecycle; if the Region's\n      // show() options permit onBeforeAttach/onAttach events, these flags will be set true again.\n      this._triggerBeforeAttach = this._triggerAttach = false;\n      this.children.each(function(childView) {\n        Marionette.triggerMethodOn(childView, 'before:show', childView);\n      });\n    },\n  \n    _onShowCalled: function() {\n      this.children.each(function(childView) {\n        Marionette.triggerMethodOn(childView, 'show', childView);\n      });\n    },\n  \n    // If during Region#show() onBeforeAttach was fired, continue firing it for child views\n    _onBeforeAttachCalled: function() {\n      this._triggerBeforeAttach = true;\n    },\n  \n    // If during Region#show() onAttach was fired, continue firing it for child views\n    _onAttachCalled: function() {\n      this._triggerAttach = true;\n    },\n  \n    // Render children views. Override this method to\n    // provide your own implementation of a render function for\n    // the collection view.\n    render: function() {\n      this._ensureViewIsIntact();\n      this.triggerMethod('before:render', this);\n      this._renderChildren();\n      this.isRendered = true;\n      this.triggerMethod('render', this);\n      return this;\n    },\n  \n    // Reorder DOM after sorting. When your element's rendering\n    // do not use their index, you can pass reorderOnSort: true\n    // to only reorder the DOM after a sort instead of rendering\n    // all the collectionView\n    reorder: function() {\n      var children = this.children;\n      var models = this._filteredSortedModels();\n  \n      if (!models.length && this._showingEmptyView) { return this; }\n  \n      var anyModelsAdded = _.some(models, function(model) {\n        return !children.findByModel(model);\n      });\n  \n      // If there are any new models added due to filtering\n      // We need to add child views\n      // So render as normal\n      if (anyModelsAdded) {\n        this.render();\n      } else {\n        // get the DOM nodes in the same order as the models\n        var elsToReorder = _.map(models, function(model, index) {\n          var view = children.findByModel(model);\n          view._index = index;\n          return view.el;\n        });\n  \n        // find the views that were children before but arent in this new ordering\n        var filteredOutViews = children.filter(function(view) {\n          return !_.contains(elsToReorder, view.el);\n        });\n  \n        this.triggerMethod('before:reorder');\n  \n        // since append moves elements that are already in the DOM,\n        // appending the elements will effectively reorder them\n        this._appendReorderedChildren(elsToReorder);\n  \n        // remove any views that have been filtered out\n        _.each(filteredOutViews, this.removeChildView, this);\n        this.checkEmpty();\n  \n        this.triggerMethod('reorder');\n      }\n    },\n  \n    // Render view after sorting. Override this method to\n    // change how the view renders after a `sort` on the collection.\n    // An example of this would be to only `renderChildren` in a `CompositeView`\n    // rather than the full view.\n    resortView: function() {\n      if (Marionette.getOption(this, 'reorderOnSort')) {\n        this.reorder();\n      } else {\n        this.render();\n      }\n    },\n  \n    // Internal method. This checks for any changes in the order of the collection.\n    // If the index of any view doesn't match, it will render.\n    _sortViews: function() {\n      var models = this._filteredSortedModels();\n  \n      // check for any changes in sort order of views\n      var orderChanged = _.find(models, function(item, index) {\n        var view = this.children.findByModel(item);\n        return !view || view._index !== index;\n      }, this);\n  \n      if (orderChanged) {\n        this.resortView();\n      }\n    },\n  \n    // Internal reference to what index a `emptyView` is.\n    _emptyViewIndex: -1,\n  \n    // Internal method. Separated so that CompositeView can append to the childViewContainer\n    // if necessary\n    _appendReorderedChildren: function(children) {\n      this.$el.append(children);\n    },\n  \n    // Internal method. Separated so that CompositeView can have\n    // more control over events being triggered, around the rendering\n    // process\n    _renderChildren: function() {\n      this.destroyEmptyView();\n      this.destroyChildren({checkEmpty: false});\n  \n      if (this.isEmpty(this.collection)) {\n        this.showEmptyView();\n      } else {\n        this.triggerMethod('before:render:collection', this);\n        this.startBuffering();\n        this.showCollection();\n        this.endBuffering();\n        this.triggerMethod('render:collection', this);\n  \n        // If we have shown children and none have passed the filter, show the empty view\n        if (this.children.isEmpty() && this.getOption('filter')) {\n          this.showEmptyView();\n        }\n      }\n    },\n  \n    // Internal method to loop through collection and show each child view.\n    showCollection: function() {\n      var ChildView;\n  \n      var models = this._filteredSortedModels();\n  \n      _.each(models, function(child, index) {\n        ChildView = this.getChildView(child);\n        this.addChild(child, ChildView, index);\n      }, this);\n    },\n  \n    // Allow the collection to be sorted by a custom view comparator\n    _filteredSortedModels: function(addedAt) {\n      var viewComparator = this.getViewComparator();\n      var models = this.collection.models;\n      addedAt = Math.min(Math.max(addedAt, 0), models.length - 1);\n  \n      if (viewComparator) {\n        var addedModel;\n        // Preserve `at` location, even for a sorted view\n        if (addedAt) {\n          addedModel = models[addedAt];\n          models = models.slice(0, addedAt).concat(models.slice(addedAt + 1));\n        }\n        models = this._sortModelsBy(models, viewComparator);\n        if (addedModel) {\n          models.splice(addedAt, 0, addedModel);\n        }\n      }\n  \n      // Filter after sorting in case the filter uses the index\n      if (this.getOption('filter')) {\n        models = _.filter(models, function(model, index) {\n          return this._shouldAddChild(model, index);\n        }, this);\n      }\n  \n      return models;\n    },\n  \n    _sortModelsBy: function(models, comparator) {\n      if (typeof comparator === 'string') {\n        return _.sortBy(models, function(model) {\n          return model.get(comparator);\n        }, this);\n      } else if (comparator.length === 1) {\n        return _.sortBy(models, comparator, this);\n      } else {\n        return models.sort(_.bind(comparator, this));\n      }\n    },\n  \n    // Internal method to show an empty view in place of\n    // a collection of child views, when the collection is empty\n    showEmptyView: function() {\n      var EmptyView = this.getEmptyView();\n  \n      if (EmptyView && !this._showingEmptyView) {\n        this.triggerMethod('before:render:empty');\n  \n        this._showingEmptyView = true;\n        var model = new Backbone.Model();\n        this.addEmptyView(model, EmptyView);\n  \n        this.triggerMethod('render:empty');\n      }\n    },\n  \n    // Internal method to destroy an existing emptyView instance\n    // if one exists. Called when a collection view has been\n    // rendered empty, and then a child is added to the collection.\n    destroyEmptyView: function() {\n      if (this._showingEmptyView) {\n        this.triggerMethod('before:remove:empty');\n  \n        this.destroyChildren();\n        delete this._showingEmptyView;\n  \n        this.triggerMethod('remove:empty');\n      }\n    },\n  \n    // Retrieve the empty view class\n    getEmptyView: function() {\n      return this.getOption('emptyView');\n    },\n  \n    // Render and show the emptyView. Similar to addChild method\n    // but \"add:child\" events are not fired, and the event from\n    // emptyView are not forwarded\n    addEmptyView: function(child, EmptyView) {\n      // Only trigger attach if already shown, attached, and not buffering, otherwise endBuffer() or\n      // Region#show() handles this.\n      var canTriggerAttach = this._isShown && !this.isBuffering && Marionette.isNodeAttached(this.el);\n      var nestedViews;\n  \n      // get the emptyViewOptions, falling back to childViewOptions\n      var emptyViewOptions = this.getOption('emptyViewOptions') ||\n                            this.getOption('childViewOptions');\n  \n      if (_.isFunction(emptyViewOptions)) {\n        emptyViewOptions = emptyViewOptions.call(this, child, this._emptyViewIndex);\n      }\n  \n      // build the empty view\n      var view = this.buildChildView(child, EmptyView, emptyViewOptions);\n  \n      view._parent = this;\n  \n      // Proxy emptyView events\n      this.proxyChildEvents(view);\n  \n      view.once('render', function() {\n        // trigger the 'before:show' event on `view` if the collection view has already been shown\n        if (this._isShown) {\n          Marionette.triggerMethodOn(view, 'before:show', view);\n        }\n  \n        // Trigger `before:attach` following `render` to avoid adding logic and event triggers\n        // to public method `renderChildView()`.\n        if (canTriggerAttach && this._triggerBeforeAttach) {\n          nestedViews = this._getViewAndNested(view);\n          this._triggerMethodMany(nestedViews, this, 'before:attach');\n        }\n      }, this);\n  \n      // Store the `emptyView` like a `childView` so we can properly remove and/or close it later\n      this.children.add(view);\n      this.renderChildView(view, this._emptyViewIndex);\n  \n      // Trigger `attach`\n      if (canTriggerAttach && this._triggerAttach) {\n        nestedViews = this._getViewAndNested(view);\n        this._triggerMethodMany(nestedViews, this, 'attach');\n      }\n      // call the 'show' method if the collection view has already been shown\n      if (this._isShown) {\n        Marionette.triggerMethodOn(view, 'show', view);\n      }\n    },\n  \n    // Retrieve the `childView` class, either from `this.options.childView`\n    // or from the `childView` in the object definition. The \"options\"\n    // takes precedence.\n    // This method receives the model that will be passed to the instance\n    // created from this `childView`. Overriding methods may use the child\n    // to determine what `childView` class to return.\n    getChildView: function(child) {\n      var childView = this.getOption('childView');\n  \n      if (!childView) {\n        throw new Marionette.Error({\n          name: 'NoChildViewError',\n          message: 'A \"childView\" must be specified'\n        });\n      }\n  \n      return childView;\n    },\n  \n    // Render the child's view and add it to the\n    // HTML for the collection view at a given index.\n    // This will also update the indices of later views in the collection\n    // in order to keep the children in sync with the collection.\n    addChild: function(child, ChildView, index) {\n      var childViewOptions = this.getOption('childViewOptions');\n      childViewOptions = Marionette._getValue(childViewOptions, this, [child, index]);\n  \n      var view = this.buildChildView(child, ChildView, childViewOptions);\n  \n      // increment indices of views after this one\n      this._updateIndices(view, true, index);\n  \n      this.triggerMethod('before:add:child', view);\n      this._addChildView(view, index);\n      this.triggerMethod('add:child', view);\n  \n      view._parent = this;\n  \n      return view;\n    },\n  \n    // Internal method. This decrements or increments the indices of views after the\n    // added/removed view to keep in sync with the collection.\n    _updateIndices: function(view, increment, index) {\n      if (!this.getOption('sort')) {\n        return;\n      }\n  \n      if (increment) {\n        // assign the index to the view\n        view._index = index;\n      }\n  \n      // update the indexes of views after this one\n      this.children.each(function(laterView) {\n        if (laterView._index >= view._index) {\n          laterView._index += increment ? 1 : -1;\n        }\n      });\n    },\n  \n    // Internal Method. Add the view to children and render it at\n    // the given index.\n    _addChildView: function(view, index) {\n      // Only trigger attach if already shown, attached, and not buffering, otherwise endBuffer() or\n      // Region#show() handles this.\n      var canTriggerAttach = this._isShown && !this.isBuffering && Marionette.isNodeAttached(this.el);\n      var nestedViews;\n  \n      // set up the child view event forwarding\n      this.proxyChildEvents(view);\n  \n      view.once('render', function() {\n        // trigger the 'before:show' event on `view` if the collection view has already been shown\n        if (this._isShown && !this.isBuffering) {\n          Marionette.triggerMethodOn(view, 'before:show', view);\n        }\n  \n        // Trigger `before:attach` following `render` to avoid adding logic and event triggers\n        // to public method `renderChildView()`.\n        if (canTriggerAttach && this._triggerBeforeAttach) {\n          nestedViews = this._getViewAndNested(view);\n          this._triggerMethodMany(nestedViews, this, 'before:attach');\n        }\n      }, this);\n  \n      // Store the child view itself so we can properly remove and/or destroy it later\n      this.children.add(view);\n      this.renderChildView(view, index);\n  \n      // Trigger `attach`\n      if (canTriggerAttach && this._triggerAttach) {\n        nestedViews = this._getViewAndNested(view);\n        this._triggerMethodMany(nestedViews, this, 'attach');\n      }\n      // Trigger `show`\n      if (this._isShown && !this.isBuffering) {\n        Marionette.triggerMethodOn(view, 'show', view);\n      }\n    },\n  \n    // render the child view\n    renderChildView: function(view, index) {\n      if (!view.supportsRenderLifecycle) {\n        Marionette.triggerMethodOn(view, 'before:render', view);\n      }\n      view.render();\n      if (!view.supportsRenderLifecycle) {\n        Marionette.triggerMethodOn(view, 'render', view);\n      }\n      this.attachHtml(this, view, index);\n      return view;\n    },\n  \n    // Build a `childView` for a model in the collection.\n    buildChildView: function(child, ChildViewClass, childViewOptions) {\n      var options = _.extend({model: child}, childViewOptions);\n      var childView = new ChildViewClass(options);\n      Marionette.MonitorDOMRefresh(childView);\n      return childView;\n    },\n  \n    // Remove the child view and destroy it.\n    // This function also updates the indices of\n    // later views in the collection in order to keep\n    // the children in sync with the collection.\n    removeChildView: function(view) {\n      if (!view) { return view; }\n  \n      this.triggerMethod('before:remove:child', view);\n  \n      if (!view.supportsDestroyLifecycle) {\n        Marionette.triggerMethodOn(view, 'before:destroy', view);\n      }\n      // call 'destroy' or 'remove', depending on which is found\n      if (view.destroy) {\n        view.destroy();\n      } else {\n        view.remove();\n      }\n      if (!view.supportsDestroyLifecycle) {\n        Marionette.triggerMethodOn(view, 'destroy', view);\n      }\n  \n      delete view._parent;\n      this.stopListening(view);\n      this.children.remove(view);\n      this.triggerMethod('remove:child', view);\n  \n      // decrement the index of views after this one\n      this._updateIndices(view, false);\n  \n      return view;\n    },\n  \n    // check if the collection is empty\n    isEmpty: function() {\n      return !this.collection || this.collection.length === 0;\n    },\n  \n    // If empty, show the empty view\n    checkEmpty: function() {\n      if (this.isEmpty(this.collection)) {\n        this.showEmptyView();\n      }\n    },\n  \n    // You might need to override this if you've overridden attachHtml\n    attachBuffer: function(collectionView, buffer) {\n      collectionView.$el.append(buffer);\n    },\n  \n    // Create a fragment buffer from the currently buffered children\n    _createBuffer: function() {\n      var elBuffer = document.createDocumentFragment();\n      _.each(this._bufferedChildren, function(b) {\n        elBuffer.appendChild(b.el);\n      });\n      return elBuffer;\n    },\n  \n    // Append the HTML to the collection's `el`.\n    // Override this method to do something other\n    // than `.append`.\n    attachHtml: function(collectionView, childView, index) {\n      if (collectionView.isBuffering) {\n        // buffering happens on reset events and initial renders\n        // in order to reduce the number of inserts into the\n        // document, which are expensive.\n        collectionView._bufferedChildren.splice(index, 0, childView);\n      } else {\n        // If we've already rendered the main collection, append\n        // the new child into the correct order if we need to. Otherwise\n        // append to the end.\n        if (!collectionView._insertBefore(childView, index)) {\n          collectionView._insertAfter(childView);\n        }\n      }\n    },\n  \n    // Internal method. Check whether we need to insert the view into\n    // the correct position.\n    _insertBefore: function(childView, index) {\n      var currentView;\n      var findPosition = this.getOption('sort') && (index < this.children.length - 1);\n      if (findPosition) {\n        // Find the view after this one\n        currentView = this.children.find(function(view) {\n          return view._index === index + 1;\n        });\n      }\n  \n      if (currentView) {\n        currentView.$el.before(childView.el);\n        return true;\n      }\n  \n      return false;\n    },\n  \n    // Internal method. Append a view to the end of the $el\n    _insertAfter: function(childView) {\n      this.$el.append(childView.el);\n    },\n  \n    // Internal method to set up the `children` object for\n    // storing all of the child views\n    _initChildViewStorage: function() {\n      this.children = new Backbone.ChildViewContainer();\n    },\n  \n    // Handle cleanup and other destroying needs for the collection of views\n    destroy: function() {\n      if (this.isDestroyed) { return this; }\n  \n      this.triggerMethod('before:destroy:collection');\n      this.destroyChildren({checkEmpty: false});\n      this.triggerMethod('destroy:collection');\n  \n      return Marionette.View.prototype.destroy.apply(this, arguments);\n    },\n  \n    // Destroy the child views that this collection view\n    // is holding on to, if any\n    destroyChildren: function(options) {\n      var destroyOptions = options || {};\n      var shouldCheckEmpty = true;\n      var childViews = this.children.map(_.identity);\n  \n      if (!_.isUndefined(destroyOptions.checkEmpty)) {\n        shouldCheckEmpty = destroyOptions.checkEmpty;\n      }\n  \n      this.children.each(this.removeChildView, this);\n  \n      if (shouldCheckEmpty) {\n        this.checkEmpty();\n      }\n      return childViews;\n    },\n  \n    // Return true if the given child should be shown\n    // Return false otherwise\n    // The filter will be passed (child, index, collection)\n    // Where\n    //  'child' is the given model\n    //  'index' is the index of that model in the collection\n    //  'collection' is the collection referenced by this CollectionView\n    _shouldAddChild: function(child, index) {\n      var filter = this.getOption('filter');\n      return !_.isFunction(filter) || filter.call(this, child, index, this.collection);\n    },\n  \n    // Set up the child view event forwarding. Uses a \"childview:\"\n    // prefix in front of all forwarded events.\n    proxyChildEvents: function(view) {\n      var prefix = this.getOption('childViewEventPrefix');\n  \n      // Forward all child view events through the parent,\n      // prepending \"childview:\" to the event name\n      this.listenTo(view, 'all', function() {\n        var args = _.toArray(arguments);\n        var rootEvent = args[0];\n        var childEvents = this.normalizeMethods(_.result(this, 'childEvents'));\n  \n        args[0] = prefix + ':' + rootEvent;\n        args.splice(1, 0, view);\n  \n        // call collectionView childEvent if defined\n        if (typeof childEvents !== 'undefined' && _.isFunction(childEvents[rootEvent])) {\n          childEvents[rootEvent].apply(this, args.slice(1));\n        }\n  \n        this.triggerMethod.apply(this, args);\n      });\n    },\n  \n    _getImmediateChildren: function() {\n      return _.values(this.children._views);\n    },\n  \n    _getViewAndNested: function(view) {\n      // This will not fail on Backbone.View which does not have #_getNestedViews.\n      return [view].concat(_.result(view, '_getNestedViews') || []);\n    },\n  \n    getViewComparator: function() {\n      return this.getOption('viewComparator');\n    }\n  });\n  \n  /* jshint maxstatements: 17, maxlen: 117 */\n  \n  // Composite View\n  // --------------\n  \n  // Used for rendering a branch-leaf, hierarchical structure.\n  // Extends directly from CollectionView and also renders an\n  // a child view as `modelView`, for the top leaf\n  Marionette.CompositeView = Marionette.CollectionView.extend({\n  \n    // Setting up the inheritance chain which allows changes to\n    // Marionette.CollectionView.prototype.constructor which allows overriding\n    // option to pass '{sort: false}' to prevent the CompositeView from\n    // maintaining the sorted order of the collection.\n    // This will fallback onto appending childView's to the end.\n    constructor: function() {\n      Marionette.CollectionView.apply(this, arguments);\n    },\n  \n    // Configured the initial events that the composite view\n    // binds to. Override this method to prevent the initial\n    // events, or to add your own initial events.\n    _initialEvents: function() {\n  \n      // Bind only after composite view is rendered to avoid adding child views\n      // to nonexistent childViewContainer\n  \n      if (this.collection) {\n        this.listenTo(this.collection, 'add', this._onCollectionAdd);\n        this.listenTo(this.collection, 'remove', this._onCollectionRemove);\n        this.listenTo(this.collection, 'reset', this._renderChildren);\n  \n        if (this.getOption('sort')) {\n          this.listenTo(this.collection, 'sort', this._sortViews);\n        }\n      }\n    },\n  \n    // Retrieve the `childView` to be used when rendering each of\n    // the items in the collection. The default is to return\n    // `this.childView` or Marionette.CompositeView if no `childView`\n    // has been defined\n    getChildView: function(child) {\n      var childView = this.getOption('childView') || this.constructor;\n  \n      return childView;\n    },\n  \n    // Serialize the model for the view.\n    // You can override the `serializeData` method in your own view\n    // definition, to provide custom serialization for your view's data.\n    serializeData: function() {\n      var data = {};\n  \n      if (this.model) {\n        data = _.partial(this.serializeModel, this.model).apply(this, arguments);\n      }\n  \n      return data;\n    },\n  \n    // Renders the model and the collection.\n    render: function() {\n      this._ensureViewIsIntact();\n      this._isRendering = true;\n      this.resetChildViewContainer();\n  \n      this.triggerMethod('before:render', this);\n  \n      this._renderTemplate();\n      this._renderChildren();\n  \n      this._isRendering = false;\n      this.isRendered = true;\n      this.triggerMethod('render', this);\n      return this;\n    },\n  \n    _renderChildren: function() {\n      if (this.isRendered || this._isRendering) {\n        Marionette.CollectionView.prototype._renderChildren.call(this);\n      }\n    },\n  \n    // Render the root template that the children\n    // views are appended to\n    _renderTemplate: function() {\n      var data = {};\n      data = this.serializeData();\n      data = this.mixinTemplateHelpers(data);\n  \n      this.triggerMethod('before:render:template');\n  \n      var template = this.getTemplate();\n      var html = Marionette.Renderer.render(template, data, this);\n      this.attachElContent(html);\n  \n      // the ui bindings is done here and not at the end of render since they\n      // will not be available until after the model is rendered, but should be\n      // available before the collection is rendered.\n      this.bindUIElements();\n      this.triggerMethod('render:template');\n    },\n  \n    // Attaches the content of the root.\n    // This method can be overridden to optimize rendering,\n    // or to render in a non standard way.\n    //\n    // For example, using `innerHTML` instead of `$el.html`\n    //\n    // ```js\n    // attachElContent: function(html) {\n    //   this.el.innerHTML = html;\n    //   return this;\n    // }\n    // ```\n    attachElContent: function(html) {\n      this.$el.html(html);\n  \n      return this;\n    },\n  \n    // You might need to override this if you've overridden attachHtml\n    attachBuffer: function(compositeView, buffer) {\n      var $container = this.getChildViewContainer(compositeView);\n      $container.append(buffer);\n    },\n  \n    // Internal method. Append a view to the end of the $el.\n    // Overidden from CollectionView to ensure view is appended to\n    // childViewContainer\n    _insertAfter: function(childView) {\n      var $container = this.getChildViewContainer(this, childView);\n      $container.append(childView.el);\n    },\n  \n    // Internal method. Append reordered childView'.\n    // Overidden from CollectionView to ensure reordered views\n    // are appended to childViewContainer\n    _appendReorderedChildren: function(children) {\n      var $container = this.getChildViewContainer(this);\n      $container.append(children);\n    },\n  \n    // Internal method to ensure an `$childViewContainer` exists, for the\n    // `attachHtml` method to use.\n    getChildViewContainer: function(containerView, childView) {\n      if (!!containerView.$childViewContainer) {\n        return containerView.$childViewContainer;\n      }\n  \n      var container;\n      var childViewContainer = Marionette.getOption(containerView, 'childViewContainer');\n      if (childViewContainer) {\n  \n        var selector = Marionette._getValue(childViewContainer, containerView);\n  \n        if (selector.charAt(0) === '@' && containerView.ui) {\n          container = containerView.ui[selector.substr(4)];\n        } else {\n          container = containerView.$(selector);\n        }\n  \n        if (container.length <= 0) {\n          throw new Marionette.Error({\n            name: 'ChildViewContainerMissingError',\n            message: 'The specified \"childViewContainer\" was not found: ' + containerView.childViewContainer\n          });\n        }\n  \n      } else {\n        container = containerView.$el;\n      }\n  \n      containerView.$childViewContainer = container;\n      return container;\n    },\n  \n    // Internal method to reset the `$childViewContainer` on render\n    resetChildViewContainer: function() {\n      if (this.$childViewContainer) {\n        this.$childViewContainer = undefined;\n      }\n    }\n  });\n  \n  // Layout View\n  // -----------\n  \n  // Used for managing application layoutViews, nested layoutViews and\n  // multiple regions within an application or sub-application.\n  //\n  // A specialized view class that renders an area of HTML and then\n  // attaches `Region` instances to the specified `regions`.\n  // Used for composite view management and sub-application areas.\n  Marionette.LayoutView = Marionette.ItemView.extend({\n    regionClass: Marionette.Region,\n  \n    options: {\n      destroyImmediate: false\n    },\n  \n    // used as the prefix for child view events\n    // that are forwarded through the layoutview\n    childViewEventPrefix: 'childview',\n  \n    // Ensure the regions are available when the `initialize` method\n    // is called.\n    constructor: function(options) {\n      options = options || {};\n  \n      this._firstRender = true;\n      this._initializeRegions(options);\n  \n      Marionette.ItemView.call(this, options);\n    },\n  \n    // LayoutView's render will use the existing region objects the\n    // first time it is called. Subsequent calls will destroy the\n    // views that the regions are showing and then reset the `el`\n    // for the regions to the newly rendered DOM elements.\n    render: function() {\n      this._ensureViewIsIntact();\n  \n      if (this._firstRender) {\n        // if this is the first render, don't do anything to\n        // reset the regions\n        this._firstRender = false;\n      } else {\n        // If this is not the first render call, then we need to\n        // re-initialize the `el` for each region\n        this._reInitializeRegions();\n      }\n  \n      return Marionette.ItemView.prototype.render.apply(this, arguments);\n    },\n  \n    // Handle destroying regions, and then destroy the view itself.\n    destroy: function() {\n      if (this.isDestroyed) { return this; }\n      // #2134: remove parent element before destroying the child views, so\n      // removing the child views doesn't retrigger repaints\n      if (this.getOption('destroyImmediate') === true) {\n        this.$el.remove();\n      }\n      this.regionManager.destroy();\n      return Marionette.ItemView.prototype.destroy.apply(this, arguments);\n    },\n  \n    showChildView: function(regionName, view, options) {\n      var region = this.getRegion(regionName);\n      return region.show.apply(region, _.rest(arguments));\n    },\n  \n    getChildView: function(regionName) {\n      return this.getRegion(regionName).currentView;\n    },\n  \n    // Add a single region, by name, to the layoutView\n    addRegion: function(name, definition) {\n      var regions = {};\n      regions[name] = definition;\n      return this._buildRegions(regions)[name];\n    },\n  \n    // Add multiple regions as a {name: definition, name2: def2} object literal\n    addRegions: function(regions) {\n      this.regions = _.extend({}, this.regions, regions);\n      return this._buildRegions(regions);\n    },\n  \n    // Remove a single region from the LayoutView, by name\n    removeRegion: function(name) {\n      delete this.regions[name];\n      return this.regionManager.removeRegion(name);\n    },\n  \n    // Provides alternative access to regions\n    // Accepts the region name\n    // getRegion('main')\n    getRegion: function(region) {\n      return this.regionManager.get(region);\n    },\n  \n    // Get all regions\n    getRegions: function() {\n      return this.regionManager.getRegions();\n    },\n  \n    // internal method to build regions\n    _buildRegions: function(regions) {\n      var defaults = {\n        regionClass: this.getOption('regionClass'),\n        parentEl: _.partial(_.result, this, 'el')\n      };\n  \n      return this.regionManager.addRegions(regions, defaults);\n    },\n  \n    // Internal method to initialize the regions that have been defined in a\n    // `regions` attribute on this layoutView.\n    _initializeRegions: function(options) {\n      var regions;\n      this._initRegionManager();\n  \n      regions = Marionette._getValue(this.regions, this, [options]) || {};\n  \n      // Enable users to define `regions` as instance options.\n      var regionOptions = this.getOption.call(options, 'regions');\n  \n      // enable region options to be a function\n      regionOptions = Marionette._getValue(regionOptions, this, [options]);\n  \n      _.extend(regions, regionOptions);\n  \n      // Normalize region selectors hash to allow\n      // a user to use the @ui. syntax.\n      regions = this.normalizeUIValues(regions, ['selector', 'el']);\n  \n      this.addRegions(regions);\n    },\n  \n    // Internal method to re-initialize all of the regions by updating the `el` that\n    // they point to\n    _reInitializeRegions: function() {\n      this.regionManager.invoke('reset');\n    },\n  \n    // Enable easy overriding of the default `RegionManager`\n    // for customized region interactions and business specific\n    // view logic for better control over single regions.\n    getRegionManager: function() {\n      return new Marionette.RegionManager();\n    },\n  \n    // Internal method to initialize the region manager\n    // and all regions in it\n    _initRegionManager: function() {\n      this.regionManager = this.getRegionManager();\n      this.regionManager._parent = this;\n  \n      this.listenTo(this.regionManager, 'before:add:region', function(name) {\n        this.triggerMethod('before:add:region', name);\n      });\n  \n      this.listenTo(this.regionManager, 'add:region', function(name, region) {\n        this[name] = region;\n        this.triggerMethod('add:region', name, region);\n      });\n  \n      this.listenTo(this.regionManager, 'before:remove:region', function(name) {\n        this.triggerMethod('before:remove:region', name);\n      });\n  \n      this.listenTo(this.regionManager, 'remove:region', function(name, region) {\n        delete this[name];\n        this.triggerMethod('remove:region', name, region);\n      });\n    },\n  \n    _getImmediateChildren: function() {\n      return _.chain(this.regionManager.getRegions())\n        .pluck('currentView')\n        .compact()\n        .value();\n    }\n  });\n  \n\n  // Behavior\n  // --------\n  \n  // A Behavior is an isolated set of DOM /\n  // user interactions that can be mixed into any View.\n  // Behaviors allow you to blackbox View specific interactions\n  // into portable logical chunks, keeping your views simple and your code DRY.\n  \n  Marionette.Behavior = Marionette.Object.extend({\n    constructor: function(options, view) {\n      // Setup reference to the view.\n      // this comes in handle when a behavior\n      // wants to directly talk up the chain\n      // to the view.\n      this.view = view;\n      this.defaults = _.result(this, 'defaults') || {};\n      this.options  = _.extend({}, this.defaults, options);\n      // Construct an internal UI hash using\n      // the views UI hash and then the behaviors UI hash.\n      // This allows the user to use UI hash elements\n      // defined in the parent view as well as those\n      // defined in the given behavior.\n      this.ui = _.extend({}, _.result(view, 'ui'), _.result(this, 'ui'));\n  \n      Marionette.Object.apply(this, arguments);\n    },\n  \n    // proxy behavior $ method to the view\n    // this is useful for doing jquery DOM lookups\n    // scoped to behaviors view.\n    $: function() {\n      return this.view.$.apply(this.view, arguments);\n    },\n  \n    // Stops the behavior from listening to events.\n    // Overrides Object#destroy to prevent additional events from being triggered.\n    destroy: function() {\n      this.stopListening();\n  \n      return this;\n    },\n  \n    proxyViewProperties: function(view) {\n      this.$el = view.$el;\n      this.el = view.el;\n    }\n  });\n  \n  /* jshint maxlen: 143 */\n  // Behaviors\n  // ---------\n  \n  // Behaviors is a utility class that takes care of\n  // gluing your behavior instances to their given View.\n  // The most important part of this class is that you\n  // **MUST** override the class level behaviorsLookup\n  // method for things to work properly.\n  \n  Marionette.Behaviors = (function(Marionette, _) {\n    // Borrow event splitter from Backbone\n    var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n  \n    function Behaviors(view, behaviors) {\n  \n      if (!_.isObject(view.behaviors)) {\n        return {};\n      }\n  \n      // Behaviors defined on a view can be a flat object literal\n      // or it can be a function that returns an object.\n      behaviors = Behaviors.parseBehaviors(view, behaviors || _.result(view, 'behaviors'));\n  \n      // Wraps several of the view's methods\n      // calling the methods first on each behavior\n      // and then eventually calling the method on the view.\n      Behaviors.wrap(view, behaviors, _.keys(methods));\n      return behaviors;\n    }\n  \n    var methods = {\n      behaviorTriggers: function(behaviorTriggers, behaviors) {\n        var triggerBuilder = new BehaviorTriggersBuilder(this, behaviors);\n        return triggerBuilder.buildBehaviorTriggers();\n      },\n  \n      behaviorEvents: function(behaviorEvents, behaviors) {\n        var _behaviorsEvents = {};\n  \n        _.each(behaviors, function(b, i) {\n          var _events = {};\n          var behaviorEvents = _.clone(_.result(b, 'events')) || {};\n  \n          // Normalize behavior events hash to allow\n          // a user to use the @ui. syntax.\n          behaviorEvents = Marionette.normalizeUIKeys(behaviorEvents, getBehaviorsUI(b));\n  \n          var j = 0;\n          _.each(behaviorEvents, function(behaviour, key) {\n            var match     = key.match(delegateEventSplitter);\n  \n            // Set event name to be namespaced using the view cid,\n            // the behavior index, and the behavior event index\n            // to generate a non colliding event namespace\n            // http://api.jquery.com/event.namespace/\n            var eventName = match[1] + '.' + [this.cid, i, j++, ' '].join('');\n            var selector  = match[2];\n  \n            var eventKey  = eventName + selector;\n            var handler   = _.isFunction(behaviour) ? behaviour : b[behaviour];\n            if (!handler) { return; }\n            _events[eventKey] = _.bind(handler, b);\n          }, this);\n  \n          _behaviorsEvents = _.extend(_behaviorsEvents, _events);\n        }, this);\n  \n        return _behaviorsEvents;\n      }\n    };\n  \n    _.extend(Behaviors, {\n  \n      // Placeholder method to be extended by the user.\n      // The method should define the object that stores the behaviors.\n      // i.e.\n      //\n      // ```js\n      // Marionette.Behaviors.behaviorsLookup: function() {\n      //   return App.Behaviors\n      // }\n      // ```\n      behaviorsLookup: function() {\n        throw new Marionette.Error({\n          message: 'You must define where your behaviors are stored.',\n          url: 'marionette.behaviors.html#behaviorslookup'\n        });\n      },\n  \n      // Takes care of getting the behavior class\n      // given options and a key.\n      // If a user passes in options.behaviorClass\n      // default to using that. Otherwise delegate\n      // the lookup to the users `behaviorsLookup` implementation.\n      getBehaviorClass: function(options, key) {\n        if (options.behaviorClass) {\n          return options.behaviorClass;\n        }\n  \n        // Get behavior class can be either a flat object or a method\n        return Marionette._getValue(Behaviors.behaviorsLookup, this, [options, key])[key];\n      },\n  \n      // Iterate over the behaviors object, for each behavior\n      // instantiate it and get its grouped behaviors.\n      parseBehaviors: function(view, behaviors) {\n        return _.chain(behaviors).map(function(options, key) {\n          var BehaviorClass = Behaviors.getBehaviorClass(options, key);\n  \n          var behavior = new BehaviorClass(options, view);\n          var nestedBehaviors = Behaviors.parseBehaviors(view, _.result(behavior, 'behaviors'));\n  \n          return [behavior].concat(nestedBehaviors);\n        }).flatten().value();\n      },\n  \n      // Wrap view internal methods so that they delegate to behaviors. For example,\n      // `onDestroy` should trigger destroy on all of the behaviors and then destroy itself.\n      // i.e.\n      //\n      // `view.delegateEvents = _.partial(methods.delegateEvents, view.delegateEvents, behaviors);`\n      wrap: function(view, behaviors, methodNames) {\n        _.each(methodNames, function(methodName) {\n          view[methodName] = _.partial(methods[methodName], view[methodName], behaviors);\n        });\n      }\n    });\n  \n    // Class to build handlers for `triggers` on behaviors\n    // for views\n    function BehaviorTriggersBuilder(view, behaviors) {\n      this._view      = view;\n      this._behaviors = behaviors;\n      this._triggers  = {};\n    }\n  \n    _.extend(BehaviorTriggersBuilder.prototype, {\n      // Main method to build the triggers hash with event keys and handlers\n      buildBehaviorTriggers: function() {\n        _.each(this._behaviors, this._buildTriggerHandlersForBehavior, this);\n        return this._triggers;\n      },\n  \n      // Internal method to build all trigger handlers for a given behavior\n      _buildTriggerHandlersForBehavior: function(behavior, i) {\n        var triggersHash = _.clone(_.result(behavior, 'triggers')) || {};\n  \n        triggersHash = Marionette.normalizeUIKeys(triggersHash, getBehaviorsUI(behavior));\n  \n        _.each(triggersHash, _.bind(this._setHandlerForBehavior, this, behavior, i));\n      },\n  \n      // Internal method to create and assign the trigger handler for a given\n      // behavior\n      _setHandlerForBehavior: function(behavior, i, eventName, trigger) {\n        // Unique identifier for the `this._triggers` hash\n        var triggerKey = trigger.replace(/^\\S+/, function(triggerName) {\n          return triggerName + '.' + 'behaviortriggers' + i;\n        });\n  \n        this._triggers[triggerKey] = this._view._buildViewTrigger(eventName);\n      }\n    });\n  \n    function getBehaviorsUI(behavior) {\n      return behavior._uiBindings || behavior.ui;\n    }\n  \n    return Behaviors;\n  \n  })(Marionette, _);\n  \n\n  // App Router\n  // ----------\n  \n  // Reduce the boilerplate code of handling route events\n  // and then calling a single method on another object.\n  // Have your routers configured to call the method on\n  // your object, directly.\n  //\n  // Configure an AppRouter with `appRoutes`.\n  //\n  // App routers can only take one `controller` object.\n  // It is recommended that you divide your controller\n  // objects in to smaller pieces of related functionality\n  // and have multiple routers / controllers, instead of\n  // just one giant router and controller.\n  //\n  // You can also add standard routes to an AppRouter.\n  \n  Marionette.AppRouter = Backbone.Router.extend({\n  \n    constructor: function(options) {\n      this.options = options || {};\n  \n      Backbone.Router.apply(this, arguments);\n  \n      var appRoutes = this.getOption('appRoutes');\n      var controller = this._getController();\n      this.processAppRoutes(controller, appRoutes);\n      this.on('route', this._processOnRoute, this);\n    },\n  \n    // Similar to route method on a Backbone Router but\n    // method is called on the controller\n    appRoute: function(route, methodName) {\n      var controller = this._getController();\n      this._addAppRoute(controller, route, methodName);\n    },\n  \n    // process the route event and trigger the onRoute\n    // method call, if it exists\n    _processOnRoute: function(routeName, routeArgs) {\n      // make sure an onRoute before trying to call it\n      if (_.isFunction(this.onRoute)) {\n        // find the path that matches the current route\n        var routePath = _.invert(this.getOption('appRoutes'))[routeName];\n        this.onRoute(routeName, routePath, routeArgs);\n      }\n    },\n  \n    // Internal method to process the `appRoutes` for the\n    // router, and turn them in to routes that trigger the\n    // specified method on the specified `controller`.\n    processAppRoutes: function(controller, appRoutes) {\n      if (!appRoutes) { return; }\n  \n      var routeNames = _.keys(appRoutes).reverse(); // Backbone requires reverted order of routes\n  \n      _.each(routeNames, function(route) {\n        this._addAppRoute(controller, route, appRoutes[route]);\n      }, this);\n    },\n  \n    _getController: function() {\n      return this.getOption('controller');\n    },\n  \n    _addAppRoute: function(controller, route, methodName) {\n      var method = controller[methodName];\n  \n      if (!method) {\n        throw new Marionette.Error('Method \"' + methodName + '\" was not found on the controller');\n      }\n  \n      this.route(route, methodName, _.bind(method, controller));\n    },\n  \n    mergeOptions: Marionette.mergeOptions,\n  \n    // Proxy `getOption` to enable getting options from this or this.options by name.\n    getOption: Marionette.proxyGetOption,\n  \n    triggerMethod: Marionette.triggerMethod,\n  \n    bindEntityEvents: Marionette.proxyBindEntityEvents,\n  \n    unbindEntityEvents: Marionette.proxyUnbindEntityEvents\n  });\n  \n  // Application\n  // -----------\n  \n  // Contain and manage the composite application as a whole.\n  // Stores and starts up `Region` objects, includes an\n  // event aggregator as `app.vent`\n  Marionette.Application = Marionette.Object.extend({\n    constructor: function(options) {\n      this._initializeRegions(options);\n      this._initCallbacks = new Marionette.Callbacks();\n      this.submodules = {};\n      _.extend(this, options);\n      this._initChannel();\n      Marionette.Object.apply(this, arguments);\n    },\n  \n    // Command execution, facilitated by Backbone.Wreqr.Commands\n    execute: function() {\n      this.commands.execute.apply(this.commands, arguments);\n    },\n  \n    // Request/response, facilitated by Backbone.Wreqr.RequestResponse\n    request: function() {\n      return this.reqres.request.apply(this.reqres, arguments);\n    },\n  \n    // Add an initializer that is either run at when the `start`\n    // method is called, or run immediately if added after `start`\n    // has already been called.\n    addInitializer: function(initializer) {\n      this._initCallbacks.add(initializer);\n    },\n  \n    // kick off all of the application's processes.\n    // initializes all of the regions that have been added\n    // to the app, and runs all of the initializer functions\n    start: function(options) {\n      this.triggerMethod('before:start', options);\n      this._initCallbacks.run(options, this);\n      this.triggerMethod('start', options);\n    },\n  \n    // Add regions to your app.\n    // Accepts a hash of named strings or Region objects\n    // addRegions({something: \"#someRegion\"})\n    // addRegions({something: Region.extend({el: \"#someRegion\"}) });\n    addRegions: function(regions) {\n      return this._regionManager.addRegions(regions);\n    },\n  \n    // Empty all regions in the app, without removing them\n    emptyRegions: function() {\n      return this._regionManager.emptyRegions();\n    },\n  \n    // Removes a region from your app, by name\n    // Accepts the regions name\n    // removeRegion('myRegion')\n    removeRegion: function(region) {\n      return this._regionManager.removeRegion(region);\n    },\n  \n    // Provides alternative access to regions\n    // Accepts the region name\n    // getRegion('main')\n    getRegion: function(region) {\n      return this._regionManager.get(region);\n    },\n  \n    // Get all the regions from the region manager\n    getRegions: function() {\n      return this._regionManager.getRegions();\n    },\n  \n    // Create a module, attached to the application\n    module: function(moduleNames, moduleDefinition) {\n  \n      // Overwrite the module class if the user specifies one\n      var ModuleClass = Marionette.Module.getClass(moduleDefinition);\n  \n      var args = _.toArray(arguments);\n      args.unshift(this);\n  \n      // see the Marionette.Module object for more information\n      return ModuleClass.create.apply(ModuleClass, args);\n    },\n  \n    // Enable easy overriding of the default `RegionManager`\n    // for customized region interactions and business-specific\n    // view logic for better control over single regions.\n    getRegionManager: function() {\n      return new Marionette.RegionManager();\n    },\n  \n    // Internal method to initialize the regions that have been defined in a\n    // `regions` attribute on the application instance\n    _initializeRegions: function(options) {\n      var regions = _.isFunction(this.regions) ? this.regions(options) : this.regions || {};\n  \n      this._initRegionManager();\n  \n      // Enable users to define `regions` in instance options.\n      var optionRegions = Marionette.getOption(options, 'regions');\n  \n      // Enable region options to be a function\n      if (_.isFunction(optionRegions)) {\n        optionRegions = optionRegions.call(this, options);\n      }\n  \n      // Overwrite current regions with those passed in options\n      _.extend(regions, optionRegions);\n  \n      this.addRegions(regions);\n  \n      return this;\n    },\n  \n    // Internal method to set up the region manager\n    _initRegionManager: function() {\n      this._regionManager = this.getRegionManager();\n      this._regionManager._parent = this;\n  \n      this.listenTo(this._regionManager, 'before:add:region', function() {\n        Marionette._triggerMethod(this, 'before:add:region', arguments);\n      });\n  \n      this.listenTo(this._regionManager, 'add:region', function(name, region) {\n        this[name] = region;\n        Marionette._triggerMethod(this, 'add:region', arguments);\n      });\n  \n      this.listenTo(this._regionManager, 'before:remove:region', function() {\n        Marionette._triggerMethod(this, 'before:remove:region', arguments);\n      });\n  \n      this.listenTo(this._regionManager, 'remove:region', function(name) {\n        delete this[name];\n        Marionette._triggerMethod(this, 'remove:region', arguments);\n      });\n    },\n  \n    // Internal method to setup the Wreqr.radio channel\n    _initChannel: function() {\n      this.channelName = _.result(this, 'channelName') || 'global';\n      this.channel = _.result(this, 'channel') || Backbone.Wreqr.radio.channel(this.channelName);\n      this.vent = _.result(this, 'vent') || this.channel.vent;\n      this.commands = _.result(this, 'commands') || this.channel.commands;\n      this.reqres = _.result(this, 'reqres') || this.channel.reqres;\n    }\n  });\n  \n  /* jshint maxparams: 9 */\n  \n  // Module\n  // ------\n  \n  // A simple module system, used to create privacy and encapsulation in\n  // Marionette applications\n  Marionette.Module = function(moduleName, app, options) {\n    this.moduleName = moduleName;\n    this.options = _.extend({}, this.options, options);\n    // Allow for a user to overide the initialize\n    // for a given module instance.\n    this.initialize = options.initialize || this.initialize;\n  \n    // Set up an internal store for sub-modules.\n    this.submodules = {};\n  \n    this._setupInitializersAndFinalizers();\n  \n    // Set an internal reference to the app\n    // within a module.\n    this.app = app;\n  \n    if (_.isFunction(this.initialize)) {\n      this.initialize(moduleName, app, this.options);\n    }\n  };\n  \n  Marionette.Module.extend = Marionette.extend;\n  \n  // Extend the Module prototype with events / listenTo, so that the module\n  // can be used as an event aggregator or pub/sub.\n  _.extend(Marionette.Module.prototype, Backbone.Events, {\n  \n    // By default modules start with their parents.\n    startWithParent: true,\n  \n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic when extending Marionette.Module.\n    initialize: function() {},\n  \n    // Initializer for a specific module. Initializers are run when the\n    // module's `start` method is called.\n    addInitializer: function(callback) {\n      this._initializerCallbacks.add(callback);\n    },\n  \n    // Finalizers are run when a module is stopped. They are used to teardown\n    // and finalize any variables, references, events and other code that the\n    // module had set up.\n    addFinalizer: function(callback) {\n      this._finalizerCallbacks.add(callback);\n    },\n  \n    // Start the module, and run all of its initializers\n    start: function(options) {\n      // Prevent re-starting a module that is already started\n      if (this._isInitialized) { return; }\n  \n      // start the sub-modules (depth-first hierarchy)\n      _.each(this.submodules, function(mod) {\n        // check to see if we should start the sub-module with this parent\n        if (mod.startWithParent) {\n          mod.start(options);\n        }\n      });\n  \n      // run the callbacks to \"start\" the current module\n      this.triggerMethod('before:start', options);\n  \n      this._initializerCallbacks.run(options, this);\n      this._isInitialized = true;\n  \n      this.triggerMethod('start', options);\n    },\n  \n    // Stop this module by running its finalizers and then stop all of\n    // the sub-modules for this module\n    stop: function() {\n      // if we are not initialized, don't bother finalizing\n      if (!this._isInitialized) { return; }\n      this._isInitialized = false;\n  \n      this.triggerMethod('before:stop');\n  \n      // stop the sub-modules; depth-first, to make sure the\n      // sub-modules are stopped / finalized before parents\n      _.invoke(this.submodules, 'stop');\n  \n      // run the finalizers\n      this._finalizerCallbacks.run(undefined, this);\n  \n      // reset the initializers and finalizers\n      this._initializerCallbacks.reset();\n      this._finalizerCallbacks.reset();\n  \n      this.triggerMethod('stop');\n    },\n  \n    // Configure the module with a definition function and any custom args\n    // that are to be passed in to the definition function\n    addDefinition: function(moduleDefinition, customArgs) {\n      this._runModuleDefinition(moduleDefinition, customArgs);\n    },\n  \n    // Internal method: run the module definition function with the correct\n    // arguments\n    _runModuleDefinition: function(definition, customArgs) {\n      // If there is no definition short circut the method.\n      if (!definition) { return; }\n  \n      // build the correct list of arguments for the module definition\n      var args = _.flatten([\n        this,\n        this.app,\n        Backbone,\n        Marionette,\n        Backbone.$, _,\n        customArgs\n      ]);\n  \n      definition.apply(this, args);\n    },\n  \n    // Internal method: set up new copies of initializers and finalizers.\n    // Calling this method will wipe out all existing initializers and\n    // finalizers.\n    _setupInitializersAndFinalizers: function() {\n      this._initializerCallbacks = new Marionette.Callbacks();\n      this._finalizerCallbacks = new Marionette.Callbacks();\n    },\n  \n    // import the `triggerMethod` to trigger events with corresponding\n    // methods if the method exists\n    triggerMethod: Marionette.triggerMethod\n  });\n  \n  // Class methods to create modules\n  _.extend(Marionette.Module, {\n  \n    // Create a module, hanging off the app parameter as the parent object.\n    create: function(app, moduleNames, moduleDefinition) {\n      var module = app;\n  \n      // get the custom args passed in after the module definition and\n      // get rid of the module name and definition function\n      var customArgs = _.drop(arguments, 3);\n  \n      // Split the module names and get the number of submodules.\n      // i.e. an example module name of `Doge.Wow.Amaze` would\n      // then have the potential for 3 module definitions.\n      moduleNames = moduleNames.split('.');\n      var length = moduleNames.length;\n  \n      // store the module definition for the last module in the chain\n      var moduleDefinitions = [];\n      moduleDefinitions[length - 1] = moduleDefinition;\n  \n      // Loop through all the parts of the module definition\n      _.each(moduleNames, function(moduleName, i) {\n        var parentModule = module;\n        module = this._getModule(parentModule, moduleName, app, moduleDefinition);\n        this._addModuleDefinition(parentModule, module, moduleDefinitions[i], customArgs);\n      }, this);\n  \n      // Return the last module in the definition chain\n      return module;\n    },\n  \n    _getModule: function(parentModule, moduleName, app, def, args) {\n      var options = _.extend({}, def);\n      var ModuleClass = this.getClass(def);\n  \n      // Get an existing module of this name if we have one\n      var module = parentModule[moduleName];\n  \n      if (!module) {\n        // Create a new module if we don't have one\n        module = new ModuleClass(moduleName, app, options);\n        parentModule[moduleName] = module;\n        // store the module on the parent\n        parentModule.submodules[moduleName] = module;\n      }\n  \n      return module;\n    },\n  \n    // ## Module Classes\n    //\n    // Module classes can be used as an alternative to the define pattern.\n    // The extend function of a Module is identical to the extend functions\n    // on other Backbone and Marionette classes.\n    // This allows module lifecyle events like `onStart` and `onStop` to be called directly.\n    getClass: function(moduleDefinition) {\n      var ModuleClass = Marionette.Module;\n  \n      if (!moduleDefinition) {\n        return ModuleClass;\n      }\n  \n      // If all of the module's functionality is defined inside its class,\n      // then the class can be passed in directly. `MyApp.module(\"Foo\", FooModule)`.\n      if (moduleDefinition.prototype instanceof ModuleClass) {\n        return moduleDefinition;\n      }\n  \n      return moduleDefinition.moduleClass || ModuleClass;\n    },\n  \n    // Add the module definition and add a startWithParent initializer function.\n    // This is complicated because module definitions are heavily overloaded\n    // and support an anonymous function, module class, or options object\n    _addModuleDefinition: function(parentModule, module, def, args) {\n      var fn = this._getDefine(def);\n      var startWithParent = this._getStartWithParent(def, module);\n  \n      if (fn) {\n        module.addDefinition(fn, args);\n      }\n  \n      this._addStartWithParent(parentModule, module, startWithParent);\n    },\n  \n    _getStartWithParent: function(def, module) {\n      var swp;\n  \n      if (_.isFunction(def) && (def.prototype instanceof Marionette.Module)) {\n        swp = module.constructor.prototype.startWithParent;\n        return _.isUndefined(swp) ? true : swp;\n      }\n  \n      if (_.isObject(def)) {\n        swp = def.startWithParent;\n        return _.isUndefined(swp) ? true : swp;\n      }\n  \n      return true;\n    },\n  \n    _getDefine: function(def) {\n      if (_.isFunction(def) && !(def.prototype instanceof Marionette.Module)) {\n        return def;\n      }\n  \n      if (_.isObject(def)) {\n        return def.define;\n      }\n  \n      return null;\n    },\n  \n    _addStartWithParent: function(parentModule, module, startWithParent) {\n      module.startWithParent = module.startWithParent && startWithParent;\n  \n      if (!module.startWithParent || !!module.startWithParentIsConfigured) {\n        return;\n      }\n  \n      module.startWithParentIsConfigured = true;\n  \n      parentModule.addInitializer(function(options) {\n        if (module.startWithParent) {\n          module.start(options);\n        }\n      });\n    }\n  });\n  \n\n  return Marionette;\n}));\n"],"sourceRoot":"/source/"}